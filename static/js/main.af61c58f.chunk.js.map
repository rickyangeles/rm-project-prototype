{"version":3,"sources":["RetreatSelection/Heading.js","AppContext.js","RetreatSelection/RetreatSize.js","RetreatSelection/RetreatType.js","Activities/ActivityHeader.js","Activities/GeneralRecreation.js","Activities/WildlifeCenter.js","Activities/HighAdventure.js","Activities/HorsePrograms.js","Activities/Teambuilding.js","Activities/PoolParties.js","Activities/LargeGroups.js","Activities/NothingSelected.js","Form/Form.js","Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Container","Row","Col","AppContext","React","createContext","constHours","constSize","medianSize","RetreatSizeApp","context","useContext","Form","Group","as","controlId","Label","Control","onChange","e","setGroupSize","target","value","setConstHours","setConstSize","setMedianSize","id","constType","RetreatTypeApp","setGroupType","defaultValue","ActivityHeader","title","total","desc","className","GeneralRecreationApp","groupType","groupSize","generalRecreation","setGeneralRecreation","generalRecreationtotalSum","setGeneralRecreationtotalSum","generalRecreationtotalGroupSum","setGeneralRecreationtotalGroupSum","selectedGeneralRecreationItems","setSelectedGeneralRecreationItems","useState","generalRecreationDesc","setGeneralRecreationDesc","useEffect","axios","get","then","res","data","catch","error","console","log","description","Array","length","fill","checkedState","setCheckedState","_generalRecreationtotalSum","useMemo","Object","entries","reduce","accumulator","key","find","subscriber","newPrice","map","index","acf","link","newTitle","rendered","Math","round","price","adminTitle","hide_in_app","type","defaultChecked","_items","GeneralRecreation","filter","item","push","href","WildlifeCenterApp","wildLife","setWildLife","wildLifetotalSum","setWildLifetotalSum","wildLifetotalGroupSum","setWildLifetotalGroupSum","selectedWildLifeItems","setSelectedWildLifeItems","wildLifeDesc","setWildLifeDesc","_wildLifetotalSum","replace","WildLife","HighAdventureApp","highAdventure","setHighAdventure","highAdventuretotalSum","setHighAdventuretotalSum","highAdventuretotalGroupSum","setHighAdventuretotalGroupSum","selectedHighAdventureItems","setSelectedHighAdventureItems","highAdventureDesc","setHighAdventureDesc","_highAdventuretotalSum","HighAdventure","HorseProgramsApp","horsePrograms","setHorsePrograms","horseProgramstotalSum","setHorseProgramstotalSum","horseProgramstotalGroupSum","setHorseProgramstotalGroupSum","selectedHorseProgramsItems","setSelectedHorseProgramsItems","horseProgDesc","setHorseProgDesc","_horseProgramstotalSum","HorsePrograms","TeambuildingApp","teamBuilding","setTeamBuilding","teamBuildingtotalSum","setTeamBuildingtotalSum","teamBuildingtotalGroupSum","setTeamBuildingtotalGroupSum","selectedTeamBuildingItems","setSelectedTeamBuildingItems","teamBuildingDesc","setTeamBuildingDesc","_teamBuildingtotalSum","TeamBuilding","PoolPartiesApp","poolParties","setPoolParties","poolPartytotalSum","setPoolPartytotalSum","poolPartytotalGroupSum","setPoolPartytotalGroupSum","selectedPoolPartyItems","setSelectedPoolPartyItems","poolPartyDesc","setPoolPartyDesc","_poolPartytotalSum","PoolParty","LargeGroupsApp","NothingSelectedAPp","Component","FooterApp","totalGroupPrice","setTotalGroupPrice","highAdvActArray","teamBuildingActArray","join","teamBuildingActString","wildLifeActArray","wildLifeActString","horseActArray","horseActString","genRecActArray","genRecActString","poolPartyActArray","poolPartyActString","totalPrice","setTotalPrice","sum","x","undefined","result","number","activeClass","to","spy","offset","smooth","duration","displayType","thousandSeparator","prefix","App","initialValue","Provider","sm","lg","Heading","RetreatSize","RetreatType","NothingSelected","Teambuilding","WildlifeCenter","PoolParties","LargeGroups","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af61c58f.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container} from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Group Information & Estimate</h3>\r\n                    <p>Price updated automatically as information and activities are selected</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Header;","import React from 'react';\r\nexport const AppContext = React.createContext({});","import React, {useContext, useEffect, useState} from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, Form } from 'react-bootstrap';\r\nimport { AppContext } from '../AppContext';\r\n\r\nlet constHours = \"\";\r\nlet constSize = \"\";\r\nlet medianSize = \"\";\r\n\r\nconst RetreatSizeApp = () => {\r\n    const context = useContext(AppContext);\r\n    const onSizeChange = (e) => {\r\n        //this.setState({ ...this.state, size: e.target.value });\r\n        context.setGroupSize(e.target.value)\r\n        constSize = e.target.value; \r\n        switch (constSize) {\r\n          case '20-39 Persons':\r\n            constHours = 2;\r\n            medianSize = 30;\r\n            break;\r\n          case '40-59 Persons': \r\n            constHours = 3;\r\n            medianSize = 50;\r\n            break;\r\n          case '60-79 Persons':\r\n            constHours = 4;\r\n            medianSize = 70;\r\n            break;\r\n          case '80+ Persons':\r\n            constHours = 5;\r\n            medianSize = 80;  \r\n            break;\r\n          default: \r\n        } \r\n        context.setConstHours(constHours);\r\n        context.setConstSize(constSize);\r\n        context.setMedianSize(medianSize);\r\n    }\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"retreat-size\">\r\n                                    <Form.Label>Enter Group Size</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={onSizeChange}>\r\n                                        <option id=\"size\">Group Size:</option>\r\n                                        <option id=\"20-39\">20-39 Persons</option>\r\n                                        <option id=\"40-59\">40-59 Persons</option>\r\n                                        <option id=\"60-9\">60-79 Persons</option>\r\n                                        <option id=\"80+\">80+ Persons</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n}\r\n\r\nexport default RetreatSizeApp;","import React, {useContext} from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, Form } from 'react-bootstrap';\r\nimport { AppContext } from '../AppContext';\r\n\r\n\r\nvar constType = \"\";\r\nexport var isOvernight = false; \r\n\r\n\r\nconst RetreatTypeApp = () => {\r\n    const context = useContext(AppContext);\r\n    const onTypeChange = (e) => {\r\n        context.setGroupType(e.target.value)\r\n        constType = e.target.value; \r\n        switch (constType) {\r\n          case 'Day Group':\r\n            isOvernight = false; \r\n            break;\r\n          case 'Overnight Group': \r\n            isOvernight = true; \r\n            break; \r\n          default: \r\n            //console.log(\"the type isn't working\");\r\n        }\r\n       context.setGroupType(constType);\r\n    } \r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"retreat-type\">\r\n                                <Form.Label>Select Group Type</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={onTypeChange}>\r\n                                    <option id=\"type\" value=\"none\">Group Type:</option>\r\n                                    <option defaultValue id=\"day\" value=\"day\">Day Group</option>\r\n                                    <option id=\"overnight\" value=\"overnight\">Overnight Group</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RetreatTypeApp;","import React from 'react';\r\n\r\nconst ActivityHeader = ({ title, total, desc}) => {\r\n    \r\n    return (\r\n        <div className=\"single-activity-header\">\r\n            <div className=\"activity-name\">\r\n                <h3 className=\"heading-style\"> {title}</h3>\r\n            </div>\r\n            <div className=\"activity-per-person\">\r\n                <div>\r\n                    <p>Average Price Per Person:</p>\r\n                    <span>{total}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ActivityHeader;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction GeneralRecreationApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, groupSize,\r\n        generalRecreation, setGeneralRecreation,\r\n        generalRecreationtotalSum, setGeneralRecreationtotalSum, \r\n        generalRecreationtotalGroupSum, setGeneralRecreationtotalGroupSum ,\r\n        selectedGeneralRecreationItems, setSelectedGeneralRecreationItems,\r\n    } = context;\r\n    const [generalRecreationDesc, setGeneralRecreationDesc] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=100&activity_group_size=704&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setGeneralRecreation(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n\r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/704')\r\n        .then(res => {\r\n            setGeneralRecreationDesc(res.data.description);\r\n        });\r\n    }, [medianSize, groupType])\r\n    \r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(generalRecreation.length).fill(false)\r\n    );\r\n    \r\n    const _generalRecreationtotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                generalRecreation.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState, groupSize, groupType]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setGeneralRecreationtotalSum(_generalRecreationtotalSum);\r\n        setGeneralRecreationtotalGroupSum((_generalRecreationtotalSum * medianSize));\r\n    }, [_generalRecreationtotalSum, medianSize, groupType, checkedState, generalRecreationtotalGroupSum])\r\n\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"genRec\">\r\n                <ActivityHeader\r\n                    title=\"General Recreation Activities\"\r\n                    total={'$' +  generalRecreationtotalSum } \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  generalRecreationDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {generalRecreation.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n\r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        generalRecreation[index].newPrice = newPrice;\r\n\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedGeneralRecreationItems?.GeneralRecreation ?? [];\r\n                                            if (!checkedState[id]  ){    \r\n                                                _items.push(adminTitle)\r\n                                                setSelectedGeneralRecreationItems({\r\n                                                    ...selectedGeneralRecreationItems,\r\n                                                    GeneralRecreation: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedGeneralRecreationItems({\r\n                                                    ...selectedGeneralRecreationItems,\r\n                                                    GeneralRecreation: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport const GeneralRecreationtotalSum = () => {}\r\nexport default GeneralRecreationApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction WildlifeCenterApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, \r\n        wildLife, setWildLife,\r\n        wildLifetotalSum, setWildLifetotalSum, \r\n        wildLifetotalGroupSum, setWildLifetotalGroupSum,\r\n        selectedWildLifeItems, setSelectedWildLifeItems,\r\n    } = context;\r\n    const [wildLifeDesc, setWildLifeDesc] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=100&activity_group_size=702&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setWildLife(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n\r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/702')\r\n        .then(res => {\r\n            setWildLifeDesc(res.data.description);\r\n        });\r\n    }, [medianSize, groupType])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(wildLife.length).fill(false)\r\n    );\r\n\r\n    const _wildLifetotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value  \r\n                ? accumulator +\r\n                wildLife.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState, medianSize, groupType]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setWildLifetotalSum(_wildLifetotalSum);\r\n        setWildLifetotalGroupSum((_wildLifetotalSum * medianSize));\r\n    }, [_wildLifetotalSum, medianSize, groupType, wildLifetotalGroupSum, checkedState])\r\n\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"wildlife\">\r\n                <ActivityHeader\r\n                    title=\"Wildlife Activities\" \r\n                    total={'$' +  wildLifetotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    { wildLifeDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {wildLife.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                        \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle.replace('&#038;', '&');\r\n                        wildLife[index].newPrice = newPrice;\r\n\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedWildLifeItems?.WildLife ?? [];\r\n                                            if (!checkedState[id]  ){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedWildLifeItems({\r\n                                                    ...selectedWildLifeItems,\r\n                                                    WildLife: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedWildLifeItems({\r\n                                                    ...selectedWildLifeItems,\r\n                                                    WildLife: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle.replace('&#038;', '&')}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                        {/* <p>{desc}</p> */}\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nexport const wildLifetotalSum = () => {}\r\nexport default WildlifeCenterApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction HighAdventureApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, \r\n        highAdventure, setHighAdventure, \r\n        highAdventuretotalSum, setHighAdventuretotalSum, \r\n        highAdventuretotalGroupSum, setHighAdventuretotalGroupSum,\r\n        selectedHighAdventureItems, setSelectedHighAdventureItems, \r\n    } = context;    \r\n    const [highAdventureDesc, setHighAdventureDesc] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=100&activity_group_size=700&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setHighAdventure(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/700')\r\n        .then(res => {\r\n            setHighAdventureDesc(res.data.description);\r\n        });\r\n    }, [medianSize,groupType])\r\n    \r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(highAdventure.length).fill(false)\r\n    );\r\n    \r\n    const _highAdventuretotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                highAdventure.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState, medianSize, groupType]\r\n    );\r\n\r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        setHighAdventuretotalSum(_highAdventuretotalSum)\r\n        setHighAdventuretotalGroupSum((_highAdventuretotalSum * medianSize)) \r\n    }, [_highAdventuretotalSum, medianSize, groupType, highAdventuretotalGroupSum, checkedState])\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"highAdv\">\r\n                <ActivityHeader\r\n                    title=\"High Adventure Activities\"\r\n                    total={'$' +  highAdventuretotalSum } \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  highAdventureDesc  }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {highAdventure.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n\r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        highAdventure[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedHighAdventureItems?.HighAdventure ?? [];\r\n                                            if (!checkedState[id]){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedHighAdventureItems({\r\n                                                    ...selectedHighAdventureItems,\r\n                                                    HighAdventure: _items\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedHighAdventureItems({\r\n                                                    ...selectedHighAdventureItems,\r\n                                                    HighAdventure: _items\r\n                                                })\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const highAdventuretotalSum = () => {}\r\nexport default HighAdventureApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction HorseProgramsApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, \r\n        horsePrograms, setHorsePrograms, \r\n        horseProgramstotalSum, setHorseProgramstotalSum, \r\n        horseProgramstotalGroupSum, setHorseProgramstotalGroupSum,\r\n        selectedHorseProgramsItems, setSelectedHorseProgramsItems,\r\n    } = context;\r\n    const [horseProgDesc, setHorseProgDesc] = useState(\"\");\r\n \r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=100&activity_group_size=703&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setHorsePrograms(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/703')\r\n        .then(res => {\r\n            setHorseProgDesc(res.data.description);\r\n        });\r\n    }, [medianSize, groupType])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(horsePrograms.length).fill(false)\r\n    );\r\n    \r\n    const _horseProgramstotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                horsePrograms.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState, medianSize, groupType]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setHorseProgramstotalSum(_horseProgramstotalSum);\r\n        setHorseProgramstotalGroupSum((_horseProgramstotalSum * medianSize))\r\n    }, [_horseProgramstotalSum, medianSize, groupType, checkedState, horseProgramstotalGroupSum, checkedState])\r\n\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"horsePro\">\r\n                <ActivityHeader\r\n                    title=\"Horse Program Activities\"\r\n                    total={'$' +  horseProgramstotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  horseProgDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {horsePrograms.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                        \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        } else {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        horsePrograms[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n                                            let _items = selectedHorseProgramsItems?.HorsePrograms ?? [];\r\n                                            if (!checkedState[id]  ){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedHorseProgramsItems({\r\n                                                    ...selectedHorseProgramsItems,\r\n                                                    HorsePrograms: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedHorseProgramsItems({\r\n                                                    ...selectedHorseProgramsItems,\r\n                                                    HorsePrograms: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${newPrice}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const horseProgramsTotalSum = () => {}\r\nexport default HorseProgramsApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction TeambuildingApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, \r\n        teamBuilding, setTeamBuilding,\r\n        teamBuildingtotalSum, setTeamBuildingtotalSum, \r\n        teamBuildingtotalGroupSum, setTeamBuildingtotalGroupSum, \r\n        selectedTeamBuildingItems, setSelectedTeamBuildingItems,\r\n    } = context;\r\n    const [teamBuildingDesc, setTeamBuildingDesc] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=100&activity_group_size=701&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setTeamBuilding(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n        //Call to get the category description\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/701')\r\n        .then(res => {\r\n            setTeamBuildingDesc(res.data.description);\r\n        });\r\n    }, [medianSize, groupType])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(teamBuilding.length).fill(false)\r\n    );\r\n\r\n    const _teamBuildingtotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                teamBuilding.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState, medianSize, groupType]\r\n    );\r\n\r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        setTeamBuildingtotalSum(Math.round(_teamBuildingtotalSum))\r\n        setTeamBuildingtotalGroupSum((_teamBuildingtotalSum * medianSize))\r\n    }, [_teamBuildingtotalSum, medianSize, groupType, teamBuildingtotalGroupSum, checkedState])\r\n    \r\n\r\n    if ( groupType !== 0 && medianSize !== 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"teamBuild\">\r\n                <ActivityHeader\r\n                    title=\"Teambuilding Activities\"\r\n                    total={'$' +  teamBuildingtotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  teamBuildingDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {teamBuilding.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                        \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        }\r\n\r\n                        let adminTitle = newTitle;\r\n                        \r\n                        teamBuilding[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n                                            let _items = selectedTeamBuildingItems?.TeamBuilding ?? [];\r\n                                            if ( !checkedState[id] ){\r\n                                               \r\n                                                _items.push(adminTitle)\r\n                                                setSelectedTeamBuildingItems({\r\n                                                    ...selectedTeamBuildingItems,\r\n                                                    TeamBuilding: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedTeamBuildingItems({\r\n                                                    ...selectedTeamBuildingItems,\r\n                                                    TeamBuilding: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const teamBuildingtotalSum = () => {}\r\nexport default TeambuildingApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction PoolPartiesApp() {\r\n    const context = useContext(AppContext);\r\n    const {\r\n        constHours, medianSize, groupType, \r\n        poolParties, setPoolParties,\r\n        poolPartytotalSum, setPoolPartytotalSum, \r\n        poolPartytotalGroupSum, setPoolPartytotalGroupSum,\r\n        selectedPoolPartyItems, setSelectedPoolPartyItems\r\n    } = context;\r\n    const [poolPartyDesc, setPoolPartyDesc] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=100&activity_group_size=705&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setPoolParties(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n\r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/705')\r\n        .then(res => {\r\n            setPoolPartyDesc(res.data.description);\r\n        });\r\n        \r\n    }, [medianSize, groupType])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(poolParties.length).fill(false)\r\n    );\r\n    const _poolPartytotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                poolParties.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState, medianSize, groupType]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setPoolPartytotalSum(_poolPartytotalSum)\r\n        setPoolPartytotalGroupSum((_poolPartytotalSum * medianSize))\r\n    }, [_poolPartytotalSum, medianSize, groupType, poolPartytotalGroupSum, checkedState])\r\n\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"pool\">\r\n                <ActivityHeader\r\n                    title=\"Pool Activities\" \r\n                    total={'$' +  poolPartytotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    { poolPartyDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                {poolParties.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                    \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        poolParties[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                        \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedPoolPartyItems?.PoolParty ?? [];\r\n                                            if (!checkedState[id]  ){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedPoolPartyItems({\r\n                                                    ...selectedPoolPartyItems,\r\n                                                    PoolParty: _items\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedPoolPartyItems({\r\n                                                    ...selectedPoolPartyItems,\r\n                                                    PoolParty: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${newPrice}/PER</span>\r\n                                        {/* <p>{desc}</p> */}\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nexport const poolPartytotalSum = () => {}\r\nexport default PoolPartiesApp; ","import React, { useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction LargeGroupsApp() {\r\n\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, groupSize} = context;\r\n    console.log(groupSize + groupType);\r\n    return (\r\n        <>\r\n            <div className=\"single-activity-section\" id=\"genRec\">\r\n                <div className=\"single-activity-header\">\r\n                    <div className=\"activity-name\">\r\n                        <h3 className=\"heading-style\">For Large Groups</h3>\r\n                    </div>\r\n                </div>\r\n                <p className=\"single-activity-description\">Due to the time and heavier coordination required to get large groups combination of activities, we'd love to talk to you about the vision for your day.\r\n                    We have successfully hosted groups of nearly 300 for a day retreat, and we're confident we can make it work for you!\r\n                    <a href=\"https://refreshingmountain.com/retreats/\" className=\"inquiry-btn\">Send Inqury</a>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LargeGroupsApp;","import React, { useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction NothingSelectedAPp() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nothing-selected-alert\">\r\n                <h2>Please select Group Size and <br></br> Group Type to view activities</h2>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NothingSelectedAPp;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button'; \r\n\r\nclass FormApp extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            groupName: \"\",\r\n            groupType: \"\",\r\n            date: \"\",\r\n            comments: \"\",\r\n        }\r\n        this.onClicking = this.onClicking.bind(this);\r\n    }\r\n\r\n    onClicking = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.firstName);\r\n        console.log(this.state.lastName);\r\n        console.log(this.state.email);\r\n        console.log(this.state.phoneNumber);\r\n        console.log(this.state.groupName);\r\n        console.log(this.state.groupType);\r\n        console.log(this.state.date);\r\n        console.log(this.state.comments);\r\n        alert(\"Thanks for contacting us!\");\r\n    }\r\n\r\n    onFirstNameChange = (e) => this.setState({ ...this.state, firstName: e.target.value});\r\n    onLastNameChange = (e) => this.setState({ ...this.state, lastName: e.target.value});\r\n    onEmailChange = (e) => this.setState({ ...this.state, email: e.target.value});\r\n    onPhoneNumberChange = (e) => this.setState({ ...this.state, phoneNumber: e.target.value});\r\n    onGroupNameChange = (e) => this.setState({ ...this.state, groupName: e.target.value});\r\n    onGroupTypeChange = (e) => this.setState({ ...this.state, groupType: e.target.value});\r\n    onDateChange = (e) => this.setState({ ...this.state, date: e.target.value});\r\n    onCommentsChange = (e) => this.setState({ ...this.state, comments: e.target.value});\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid=\"lg\">\r\n                    <h1 style={{ textAlign: 'center' }}>Heading for Form</h1>\r\n                    <br/>\r\n                    <br/>\r\n                    <Form onSubmit={this.onClicking}>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>First Name:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Please enter first name\" onChange={this.onFirstNameChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Last Name:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Please enter last name\" onChange={this.onLastNameChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Email:</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Please enter email\" onChange={this.onEmailChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Phone Number:</Form.Label>\r\n                                    <Form.Control placeholder=\"Please enter phone number\" onChange={this.onPhoneNumberChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Group Name: (optional)</Form.Label>\r\n                                    <Form.Control placeholder=\"Please enter group name\" onChange={this.onGroupNameChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Group Type:</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.onGroupTypeChange}>\r\n                                        <option id=\"type\">Please select group type:</option>\r\n                                        <option id=\"families\">Families</option>\r\n                                        <option id=\"children\">Children</option>\r\n                                        <option id=\"teens\">Teens</option>\r\n                                        <option id=\"men\">Men</option>\r\n                                        <option id=\"women\">Women</option>\r\n                                        <option id=\"other\">Other</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Desired Dates:</Form.Label>\r\n                                    <Form.Control placeholder=\"Please enter desired dates\" onChange={this.onDateChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Comments or Questions?</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} onChange={this.onCommentsChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group onSubmit={this.onClicking}>\r\n                                    <Button variant=\"primary\" type=\"submit\" size=\"lg\">Submit</Button>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormApp;","import React, { useState, useContext, useEffect } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBFooter } from \"mdbreact\";\r\nimport { Link } from 'react-scroll';\r\nimport Totals from './Totals';\r\nimport './Footer.css';\r\n\r\nimport { teambuildingTotalPrice } from '../Activities/Teambuilding';\r\nimport { poolPartiesTotalPrice } from '../Activities/PoolParties';\r\nimport {AppContext} from '../AppContext'\r\nimport { groupType } from '../RetreatSelection/RetreatType';\r\n\r\nfunction getFormattedPrice(price) {\r\n    return `${price.toFixed(2)}`;\r\n}\r\n\r\nlet sideBarClass = 'estimate-sidebar';\r\nlet groupPrice = 0;\r\nlet groupSizeString = \"\";\r\n\r\nfunction FooterApp() {\r\n    const context = useContext(AppContext);\r\n    const { \r\n        groupSize, \r\n        medianSize, \r\n        groupType,\r\n        highAdventuretotalSum, highAdventuretotalGroupSum,\r\n        generalRecreationtotalSum, generalRecreationtotalGroupSum, \r\n        wildLifetotalSum, wildLifetotalGroupSum, \r\n        teamBuildingtotalSum, teamBuildingtotalGroupSum, \r\n        horseProgramstotalSum, horseProgramstotalGroupSum,\r\n        poolPartytotalSum, poolPartytotalGroupSum, \r\n        totalGroupPrice, setTotalGroupPrice,\r\n        selectedHighAdventureItems, setSelectedHighAdventureItems,\r\n        selectedHorseProgramsItems, setSelectedHorseProgramsItems,\r\n        selectedWildLifeItems, setSelectedWildLifeItems,\r\n        selectedTeamBuildingItems, setSelectedTeamBuildingItems,\r\n        selectedGeneralRecreationItems, setSelectedGeneralRecreationItems,\r\n        selectedPoolPartyItems, setSelectedPoolPartyItems\r\n    } = context;\r\n    \r\n    const highAdvActArray = selectedHighAdventureItems['HighAdventure'];\r\n    const highAdvActString = highAdvActArray ? highAdvActArray.join(', ') : 'Nothing Selected';\r\n\r\n    const teamBuildingActArray = selectedTeamBuildingItems['TeamBuilding'];\r\n    const teamBuildingActString = teamBuildingActArray?.join(', ');\r\n\r\n    const wildLifeActArray = selectedWildLifeItems['WildLife'];\r\n    const wildLifeActString = wildLifeActArray?.join(', ');\r\n\r\n    const horseActArray = selectedHorseProgramsItems['HorsePrograms'];\r\n    const horseActString = horseActArray?.join(', ');\r\n\r\n    const genRecActArray = selectedGeneralRecreationItems['GeneralRecreation'];\r\n    const genRecActString = genRecActArray?.join(', ');\r\n\r\n    const poolPartyActArray = selectedPoolPartyItems['PoolParty'];\r\n    const poolPartyActString = poolPartyActArray?.join(', ');\r\n    \r\n     const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n\r\n    useEffect(()=> {\r\n        //Array with all prices\r\n        let allPrices = [\r\n            generalRecreationtotalSum,\r\n            wildLifetotalSum,\r\n            highAdventuretotalSum,\r\n            teamBuildingtotalSum,\r\n            horseProgramstotalSum,\r\n            poolPartytotalSum]; \r\n\r\n        // console.log(\"HighAdventure:\", highAdvActArray);\r\n        // console.log(\"Team Building:\", teamBuildingActArray);\r\n        // console.log(\"Wildlife:\", wildLifeActArray);\r\n        // console.log(\"Horse:\", horseActArray);\r\n        // console.log(\"Gen Rec:\", genRecActArray);\r\n        // console.log(\"Pool:\", poolPartyActArray);\r\n\r\n        //Remove any undefined values from array\r\n        let filteredPrices = allPrices.filter(function(x) {\r\n            return x !== undefined;\r\n        });\r\n        const sum = filteredPrices.reduce((result,number)=> result+number);\r\n        setTotalPrice(sum);\r\n\r\n        setTotalGroupPrice(highAdventuretotalGroupSum + generalRecreationtotalGroupSum + wildLifetotalGroupSum + teamBuildingtotalGroupSum + horseProgramstotalGroupSum + poolPartytotalGroupSum);\r\n    }, [groupType, medianSize, highAdventuretotalGroupSum, generalRecreationtotalGroupSum, wildLifetotalGroupSum,teamBuildingtotalGroupSum,horseProgramstotalGroupSum,poolPartytotalGroupSum])\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div>\r\n            <MDBFooter className={sideBarClass} id=\"horseProg\">\r\n                <h3>Your Group Price Estimate</h3>\r\n                <div>\r\n                    <h4>Average Price Per Person</h4>\r\n                    <ul>\r\n                        <li><Link activeClass={\"active\"} to=\"highAdv\" spy={true} offset={-20} smooth={true} duration={700}>High Adventure Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( highAdventuretotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"teamBuild\" spy={true} offset={-20} smooth={true} duration={700}>Teambuilding Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( teamBuildingtotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"wildlife\" spy={true} offset={-20} smooth={true} duration={700}>Wildlife Center Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( wildLifetotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }\r\n                            </span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"horsePro\" spy={true} offset={-20}smooth={true} duration={700}>Horse Program Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( horseProgramstotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"genRec\" spy={true} offset={-20} smooth={true} duration={700}>General Recreation Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( generalRecreationtotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link> </li>\r\n                        <li><Link activeClass=\"active\" to=\"pool\" spy={true} offset={-20} smooth={true} duration={700}>Pool Parties <span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( poolPartytotalGroupSum)} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><strong>Total <span>\r\n                        {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( totalGroupPrice ) } displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></strong></li>\r\n                    </ul>\r\n                    {groupSize !== '80+ Persons'?\r\n                    \r\n                    <div className=\"finalPrice\">\r\n            \r\n                        <div>\r\n                            <span>{totalPrice}</span> \r\n                            <span>Per Person Estimate</span> \r\n                        </div>\r\n                        <div>\r\n                            <a href=\r\n                                { \r\n                                    'https://refreshingmountain.com/day-activity-calculator-results/?' +\r\n                                    'size='             + groupSize  +\r\n                                    '&type='            + groupType +\r\n\r\n                                    '&highAdv='         + highAdventuretotalGroupSum +\r\n                                    '&highAdvAct='      + highAdvActArray + \r\n\r\n                                    '&teamBld='         + teamBuildingtotalGroupSum +\r\n                                    '&teamBldAct='      + teamBuildingActString + \r\n\r\n                                    '&wildLife='        + wildLifetotalGroupSum +\r\n                                    '&wildLifeAct='     + wildLifeActString + \r\n\r\n                                    '&horsePrg='        + horseProgramstotalGroupSum +\r\n                                    '&horsePrgAct='     + horseActString + \r\n\r\n                                    '&genRec='          + generalRecreationtotalGroupSum +\r\n                                    '&genRecAct='       + genRecActString + \r\n                                    \r\n                                    '&poolPrty='        + poolPartytotalGroupSum +\r\n                                    '&poolPrtyAct='     + poolPartyActString + \r\n                                    \r\n                                    '&total='           + totalPrice + \r\n                                    '&groupTotal='      + totalGroupPrice \r\n                                } \r\n                                \r\n                                className=\"click-price-btn\" target=\"_blank;\">Send Copy</a>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    : null}\r\n                    \r\n            \r\n                    <p className=\"text-center\"><strong>Group Type Discounts: </strong>Day Groups may be eligible for discount with week day bookings, Monday through Friday.</p>\r\n                    <p className=\"text-center\">*Group events are price as a flat rate. This “pp” estimate is meant to help with planning, but final billing will be set as a flat price, with a min/max # of people that the schedule can accommodate</p>\r\n                </div>\r\n            </MDBFooter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterApp;","import React, { useState, useEffect, useContext} from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nimport './App.css';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport axios from 'axios';\r\n\r\nimport HeadingApp from './RetreatSelection/Heading';\r\nimport RetreatSizeApp from './RetreatSelection/RetreatSize';\r\nimport RetreatTypeApp from './RetreatSelection/RetreatType';\r\nimport GeneralActivitiesApp from './Activities/GeneralRecreation';\r\nimport WildlifeCenterApp from './Activities/WildlifeCenter';\r\nimport HighAdventureApp from './Activities/HighAdventure';\r\nimport HorseProgramsApp from './Activities/HorsePrograms';\r\nimport TeambuildingApp from './Activities/Teambuilding';\r\nimport PoolPartiesApp from './Activities/PoolParties';\r\nimport LargeGroupsApp from './Activities/LargeGroups';\r\nimport NothingSelectedApp from './Activities/NothingSelected';\r\n\r\nimport FormApp from './Form/Form';\r\nimport FooterApp from './Footer/Footer';\r\nimport { isOvernight } from './RetreatSelection/RetreatType';\r\nimport {AppContext} from './AppContext';\r\n\r\n\r\n\r\nfunction App() {\r\n    const context = useContext(AppContext)\r\n\r\n    const [groupSize,                       setGroupSize] = useState(0);\r\n    const [groupType,                       setGroupType] = useState(0);\r\n\r\n    const [constHours,                      setConstHours] = useState(\"\");\r\n    const [constSize,                       setConstSize] = useState(\"\");\r\n    const [medianSize,                      setMedianSize] = useState(\"\");\r\n\r\n    const [highAdventuretotalSum,           setHighAdventuretotalSum] = useState(\"\");\r\n    const [generalRecreationtotalSum,       setGeneralRecreationtotalSum] = useState(\"\");\r\n    const [wildLifetotalSum,                setWildLifetotalSum] = useState(\"\");\r\n    const [teamBuildingtotalSum,            setTeamBuildingtotalSum] = useState(\"\");\r\n    const [horseProgramstotalSum,           setHorseProgramstotalSum] = useState(\"\");\r\n    const [poolPartytotalSum,               setPoolPartytotalSum] = useState(\"\");\r\n\r\n    \r\n    const [highAdventuretotalGroupSum,      setHighAdventuretotalGroupSum] = useState(0);\r\n    const [generalRecreationtotalGroupSum,  setGeneralRecreationtotalGroupSum] = useState(0);\r\n    const [wildLifetotalGroupSum,           setWildLifetotalGroupSum] = useState(0);\r\n    const [teamBuildingtotalGroupSum,       setTeamBuildingtotalGroupSum] = useState(0);\r\n    const [horseProgramstotalGroupSum,      setHorseProgramstotalGroupSum] = useState(0);\r\n    const [poolPartytotalGroupSum,          setPoolPartytotalGroupSum] = useState(0);\r\n\r\n    const [totalGroupPrice,                 setTotalGroupPrice] = useState(0);\r\n\r\n\r\n    const [highAdventure,                   setHighAdventure] = useState([]);\r\n    const [wildLife,                        setWildLife] = useState([]);\r\n    const [generalRecreation,               setGeneralRecreation] = useState([]);\r\n    const [poolParties,                     setPoolParties] = useState([]);\r\n    const [horsePrograms,                   setHorsePrograms] = useState([]);\r\n    const [teamBuilding,                    setTeamBuilding] = useState([]);\r\n    \r\n    const [selectedHighAdventureItems,      setSelectedHighAdventureItems] = useState(0);\r\n    const [selectedGeneralRecreationItems,  setSelectedGeneralRecreationItems] = useState(0);\r\n    const [selectedWildLifeItems,           setSelectedWildLifeItems] = useState(0);\r\n    const [selectedTeamBuildingItems,       setSelectedTeamBuildingItems] = useState(0);\r\n    const [selectedHorseProgramsItems,      setSelectedHorseProgramsItems] = useState(0);\r\n    const [selectedPoolPartyItems,          setSelectedPoolPartyItems] = useState(0);\r\n\r\n\r\n    const initialValue = {\r\n        groupSize,                      setGroupSize,\r\n        groupType,                      setGroupType,\r\n        constHours,                     setConstHours,\r\n        constSize,                      setConstSize,\r\n        medianSize,                     setMedianSize,\r\n\r\n        highAdventure,                  setHighAdventure,\r\n        wildLife,                       setWildLife,\r\n        generalRecreation,              setGeneralRecreation,\r\n        poolParties,                    setPoolParties,\r\n        horsePrograms,                  setHorsePrograms,\r\n        teamBuilding,                   setTeamBuilding,\r\n\r\n        highAdventuretotalSum,          setHighAdventuretotalSum,\r\n        generalRecreationtotalSum,      setGeneralRecreationtotalSum,\r\n        wildLifetotalSum,               setWildLifetotalSum,\r\n        teamBuildingtotalSum,           setTeamBuildingtotalSum,\r\n        horseProgramstotalSum,          setHorseProgramstotalSum,\r\n        poolPartytotalSum,              setPoolPartytotalSum,\r\n        \r\n        highAdventuretotalGroupSum,     setHighAdventuretotalGroupSum,\r\n        generalRecreationtotalGroupSum, setGeneralRecreationtotalGroupSum,\r\n        wildLifetotalGroupSum,          setWildLifetotalGroupSum,\r\n        teamBuildingtotalGroupSum,      setTeamBuildingtotalGroupSum,\r\n        horseProgramstotalGroupSum,     setHorseProgramstotalGroupSum,\r\n        poolPartytotalGroupSum,         setPoolPartytotalGroupSum,\r\n\r\n        totalGroupPrice,                setTotalGroupPrice,\r\n        highAdventure,                  setHighAdventure,\r\n        horsePrograms,                  setHorsePrograms,\r\n        teamBuilding,                   setTeamBuilding,\r\n        generalRecreation,              setGeneralRecreation,\r\n\r\n        selectedHighAdventureItems,     setSelectedHighAdventureItems,\r\n        selectedGeneralRecreationItems, setSelectedGeneralRecreationItems,\r\n        selectedWildLifeItems,          setSelectedWildLifeItems,\r\n        selectedTeamBuildingItems,      setSelectedTeamBuildingItems,\r\n        selectedHorseProgramsItems,     setSelectedHorseProgramsItems,\r\n        selectedPoolPartyItems,         setSelectedPoolPartyItems\r\n        \r\n    }\r\n    return (\r\n        \r\n        <AppContext.Provider value={initialValue}>\r\n            <div className=\"App\">\r\n                <Container>\r\n                    <Row className=\"filter-bar\">\r\n                        <Col className=\"heading-intro\" sm=\"12\" lg=\"4\">\r\n                            <HeadingApp />\r\n                        </Col>\r\n                        <Col className=\"retreat-size\" sm=\"12\" lg=\"4\">\r\n                            <RetreatSizeApp />\r\n                        </Col>\r\n                        <Col className=\"retreat-type\" sm=\"12\" lg=\"4\">\r\n                            <RetreatTypeApp />\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"activity-detail\">\r\n                        <p>Activities can generally accommodate 20 people per hour. Example, with a group size of 20-39 you would need 2 activities to keep everyone occupied over 2 hrs. The pricing automatically recognizes number of hours needed based on your group size.</p>\r\n                    </div>\r\n                    <Row>\r\n                        <Col sm=\"12\" lg=\"8\">\r\n                            {groupSize === 0 || groupType === 0 ? <NothingSelectedApp /> : null }\r\n                            <HighAdventureApp />\r\n                            <TeambuildingApp />\r\n                            <WildlifeCenterApp />\r\n                            <HorseProgramsApp />\r\n                            <GeneralActivitiesApp />     \r\n                            <PoolPartiesApp />\r\n                            {groupSize === '80+ Persons' && groupType !== 0 ? <LargeGroupsApp /> : null }\r\n                        </Col>\r\n                        <Col className=\"sidebar\" sm=\"12\" lg=\"4\">\r\n                            <FooterApp />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AppContext } from './AppContext';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n          <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
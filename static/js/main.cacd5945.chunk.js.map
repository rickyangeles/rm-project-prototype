{"version":3,"sources":["RetreatSelection/Heading.js","AppContext.js","RetreatSelection/RetreatSize.js","RetreatSelection/RetreatType.js","Activities/ActivityHeader.js","Activities/ActivityItem.js","Activities/GeneralRecreation.js","Activities/WildlifeCenter.js","Activities/HighAdventure.js","Activities/HorsePrograms.js","Activities/Teambuilding.js","Activities/PoolParties.js","Activities/LargeGroups.js","Form/Form.js","Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Container","Row","Col","AppContext","React","createContext","constHours","constSize","medianSize","RetreatSizeApp","context","useContext","Form","Group","as","controlId","Label","Control","onChange","e","setGroupSize","target","value","setConstHours","setConstSize","setMedianSize","id","constType","isOvernight","groupType","RetreatTypeApp","console","log","setGroupType","defaultValue","ActivityHeader","title","total","desc","className","ActivityItem","genRec","key","price","label","link","GeneralRecreationApp","generalRecreationtotalSum","setGeneralRecreationtotalSum","useState","Array","length","fill","checkedState","setCheckedState","_generalRecreationtotalSum","useMemo","Object","entries","reduce","accumulator","find","subscriber","newPrice","useEffect","map","index","Math","round","type","defaultChecked","href","wildlifeCenter","WildlifeCenterApp","wildLifetotalSum","setWildLifetotalSum","_wildLifetotalSum","highAdventure","HighAdventureApp","highAdventuretotalSum","setHighAdventuretotalSum","_highAdventuretotalSum","horsePrograms","HorseProgramsApp","horseProgramstotalSum","setHorseProgramstotalSum","_horseProgramsTotalSum","teambuilding","TeambuildingApp","teamBuildingtotalSum","setTeamBuildingtotalSum","_teamBuildingtotalSum","poolParties","PoolPartiesApp","poolPartytotalSum","setPoolPartytotalSum","_poolPartytotalSum","LargeGroupsApp","Component","sideBarClass","FooterApp","groupSize","totalPrice","setTotalPrice","sum","filter","x","undefined","result","number","activeClass","to","spy","offset","smooth","duration","App","initialValue","Provider","sm","lg","Heading","RetreatSize","RetreatType","HighAdventure","Teambuilding","WildlifeCenter","HorsePrograms","PoolParties","LargeGroups","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cacd5945.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container} from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Group Information & Estimate</h3>\r\n                    <p>Price updated automatically as information and activities are selected</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Header;","import React from 'react';\r\nexport const AppContext = React.createContext({});","import React, {useContext, useEffect, useState} from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, Form } from 'react-bootstrap';\r\nimport { AppContext } from '../AppContext';\r\n\r\nlet constHours = \"\";\r\nlet constSize = \"\";\r\nlet medianSize = \"\";\r\n\r\nconst RetreatSizeApp = () => {\r\n    const context = useContext(AppContext);\r\n    const onSizeChange = (e) => {\r\n        //this.setState({ ...this.state, size: e.target.value });\r\n        context.setGroupSize(e.target.value)\r\n        constSize = e.target.value; \r\n        switch (constSize) {\r\n          case '20-39 Persons':\r\n            constHours = 2;\r\n            medianSize = 30;\r\n            break;\r\n          case '40-59 Persons': \r\n            constHours = 3;\r\n            medianSize = 50;\r\n            break;\r\n          case '60-79 Persons':\r\n            constHours = 4;\r\n            medianSize = 70;\r\n            break;\r\n          case '80+ Persons':\r\n            constHours = 5;\r\n            medianSize = 80;  \r\n            break;\r\n          default: \r\n        } \r\n        context.setConstHours(constHours);\r\n        context.setConstSize(constSize);\r\n        context.setMedianSize(medianSize);\r\n    }\r\n    \r\n   \r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"retreat-size\">\r\n                                    <Form.Label>Enter Group Size</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={onSizeChange}>\r\n                                        <option id=\"size\">Group Size:</option>\r\n                                        <option id=\"20-39\">20-39 Persons</option>\r\n                                        <option id=\"40-59\">40-59 Persons</option>\r\n                                        <option id=\"60-9\">60-79 Persons</option>\r\n                                        <option id=\"80+\">80+ Persons</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n}\r\n\r\nexport default RetreatSizeApp;","import React, {useContext} from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, Form } from 'react-bootstrap';\r\nimport { AppContext } from '../AppContext';\r\nvar constType = \"\";\r\nexport var isOvernight = false; \r\nexport var groupType = \"\";\r\n\r\nconst RetreatTypeApp = () => {\r\n    const context = useContext(AppContext);\r\n    console.log('context2', context)\r\n    const onTypeChange = (e) => {\r\n        context.setGroupType(e.target.value)\r\n        constType = e.target.value; \r\n        switch (constType) {\r\n          case 'Day Group':\r\n            isOvernight = false; \r\n            break;\r\n          case 'Overnight Group': \r\n            isOvernight = true; \r\n            break; \r\n          default: \r\n            //console.log(\"the type isn't working\");\r\n        }\r\n        groupType = constType;\r\n        // /console.log(this.state);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"retreat-type\">\r\n                                <Form.Label>Select Group Type</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={onTypeChange}>\r\n                                    <option id=\"type\">Group Type:</option>\r\n                                    <option defaultValue id=\"day\">Day Group</option>\r\n                                    <option id=\"overnight\">Overnight Group</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RetreatTypeApp;","import React from 'react';\r\n\r\nconst ActivityHeader = ({ title, total, desc}) => {\r\n    \r\n    return (\r\n        <div className=\"single-activity-header\">\r\n            <div className=\"activity-name\">\r\n                <h3 className=\"heading-style\"> {title}</h3>\r\n            </div>\r\n            <div className=\"activity-per-person\">\r\n                <div>\r\n                    <p>Average Price Per Person:</p>\r\n                    <span>{total}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ActivityHeader;","import React, {useState} from \"react\";\r\nimport { constHours, medianSize } from '../RetreatSelection/RetreatSize';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\n\r\n\r\nfunction ActivityItem(props) {\r\n\r\n    return(   \r\n        <li key={props.index}>\r\n            <input\r\n                className='ck'\r\n                type=\"checkbox\"\r\n                id={`custom-checkbox-${props.index}`}\r\n                name={props.label}\r\n                value={props.label}\r\n                //checked={props.checkedState[props.index]}\r\n                onChange={() => props.handleOnChange(props.index)}\r\n            />\r\n            <label>\r\n                <a href={props.link}>{props.label}</a> <span>${props.price}/PER</span>\r\n                <p>{props.desc}</p>\r\n            </label>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default ActivityItem;\r\n","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport ActivityItem from './ActivityItem';\r\n//export var genRecTotalPrice = 0;\r\n\r\n\r\nconst genRec = [\r\n    { key: 0, price: 88, label: \"Archery\", link: \"https://refreshingmountain.com/activities/archery/\" },\r\n    { key: 1, price: 48, label: \"Campfire\", link: \"https://refreshingmountain.com/activities/campfires/\" },\r\n    { key: 2, price: 88, label: \"GPS Nature Hunt\", link: \"https://refreshingmountain.com/activities/gps-nature-hunt-navigation/\" },\r\n    { key: 3, price: 88, label: \"Orienteering\", link: \"https://refreshingmountain.com/activities/orienteering-navigation/\" },\r\n    { key: 4, price: 199, label: \"Paintball Targets\", link: \"https://refreshingmountain.com/activities/paintball-target-shooting-course/\" },\r\n    { key: 5, price: 153, label: \"Pedal Carts\", link: \"https://refreshingmountain.com/activities/pedal-carts/\" },\r\n    { key: 6, price: 88, label: \"Slingshots\", link: \"https://refreshingmountain.com/activities/sling-shots-4/\" },\r\n];\r\n\r\nfunction GeneralRecreationApp() {\r\n\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, generalRecreationtotalSum, setGeneralRecreationtotalSum, } = context;\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(genRec.length).fill(false)\r\n    );\r\n    \r\n    const _generalRecreationtotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value\r\n                ? accumulator +\r\n                genRec.find(\r\n                    (subscriber) => subscriber.key + \"\" === key\r\n                  ).newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setGeneralRecreationtotalSum(_generalRecreationtotalSum)\r\n    }, [_generalRecreationtotalSum])\r\n\r\n\r\n    if ( constHours !== \"\" && medianSize < 80 ) {\r\n        return (\r\n            <>\r\n                <div className=\"single-activity-section\" id=\"genRec\">\r\n                    <ActivityHeader\r\n                        title=\"General Recreation Activities\"\r\n                        total={'$' +  generalRecreationtotalSum} \r\n                    />\r\n                    <p className=\"single-activity-description\">Nunc interdum lacus sit amet orci. Quisque id mi. Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Pellentesque commodo eros a enim.</p>\r\n                    <ul className=\"no-bullets\">\r\n                        {genRec.map(({ price, label, link, desc, key }, index) => {\r\n                            let newPrice = 0;\r\n                            if (constHours !== \"\" && medianSize !== \"\" && isOvernight !== \"\") {\r\n                                if (isOvernight === false) {\r\n                                    //console.log(genRec[index].label);\r\n                                    newPrice = Math.round((price * constHours) / medianSize);\r\n                                }\r\n                                else if (isOvernight === true) {\r\n                                    //console.log(genRec[index].label);\r\n                                    newPrice = Math.round(((price * constHours) / medianSize) * 0.75);\r\n                                } else if (isOvernight === null) {\r\n                                    newPrice = 0;\r\n                                }\r\n                            }else {\r\n                                newPrice = 0;\r\n                            }\r\n                            genRec[key].newPrice = newPrice;\r\n                            return (\r\n                                <li key={index}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                        setCheckedState({\r\n                                            ...checkedState,\r\n                                            [index]: !checkedState[index]\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{label}</a> <span>${newPrice}/PER</span>\r\n                                        <p>{desc}</p>\r\n                                    </label>\r\n                            </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const GeneralRecreationtotalSum = () => {}\r\nexport default GeneralRecreationApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport ActivityItem from './ActivityItem';\r\n\r\nconst wildlifeCenter = [\r\n    { key:0, price: 138, label: \"Birds of Prey\", link: \"https://refreshingmountain.com/activities/birds-of-prey/\" },\r\n    { key:1, price: 203, label: \"Large Group Presentation\", link: \"https://refreshingmountain.com/activities/large-group-reptile-and-amphibian-presentation/\" },\r\n    { key:2, price: 111, label: \"Pond and Stream\", link: \"\" },\r\n    { key:3, price: 111, label: \"Reptiles and Amphibians\", link: \"\" },\r\n    { key:4, price: 138, label: \"Toxic Plants and Animals\", link: \"\" },\r\n    { key:5, price: 111, label: \"Wildlife of PA\", link: \"\" },\r\n    { key:6, price: 111, label: \"Wildlife Center OPEN TIME\", link: \"https://refreshingmountain.com/activities/wildlife-center-free-time/\" },\r\n    { key:7, price: 138, label: \"Wilderness Survival (1 hr.)\", link: \"\" },\r\n    { key:8, price: 221, label: \"Wilderness Survival (2 hrs.)\", link: \"\" },\r\n];\r\n\r\n\r\nfunction WildlifeCenterApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, wildLifetotalSum, setWildLifetotalSum, } = context;\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(wildlifeCenter.length).fill(false)\r\n    );\r\n\r\n    // useEffect(()=>{\r\n    //     axios.get(`https://refreshingmountain.com/wp-json/wp/v2/activities?include=18712,18755,18746,18744,18708,18714`)\r\n    //     .then(res => {\r\n    //         setwildlifeCenter(res.data)\r\n           \r\n    //     })\r\n    // }, [])\r\n    const _wildLifetotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value\r\n                ? accumulator +\r\n                wildlifeCenter.find(\r\n                    (subscriber) => subscriber.key + \"\" === key\r\n                  ).newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setWildLifetotalSum(_wildLifetotalSum)\r\n    }, [_wildLifetotalSum])\r\n\r\n\r\n    if ( constHours !== \"\" && medianSize < 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"wildlife\">\r\n                <ActivityHeader\r\n                    title=\"Wildlife Activities\" \r\n                    total={'$' +  wildLifetotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">Nunc interdum lacus sit amet orci. Quisque id mi. Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Pellentesque commodo eros a enim.</p>\r\n                <ul className=\"no-bullets\">\r\n                    {wildlifeCenter.map(({ price, label, link, desc, key }, index) => {\r\n                        let newPrice = 0;\r\n                        if (constHours !== \"\" && medianSize !== \"\" && isOvernight !== \"\") {\r\n                            if (isOvernight === false) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round((price * constHours) / medianSize);\r\n                            }\r\n                            else if (isOvernight === true) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round(((price * constHours) / medianSize) * 0.75);\r\n                            } else if (isOvernight === null) {\r\n                                newPrice = 0;\r\n                            }\r\n                        }else {\r\n                            newPrice = 0;\r\n                        }\r\n                        wildlifeCenter[key].newPrice = newPrice;\r\n                        \r\n                        return (\r\n                            <li key={index}>\r\n                                <input\r\n                                    className='ck'\r\n                                    type=\"checkbox\"\r\n                                    defaultChecked={!!checkedState[index]}\r\n                                    onChange={() => {\r\n                                    setCheckedState({\r\n                                        ...checkedState,\r\n                                        [index]: !checkedState[index]\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                <label>\r\n                                    <a href={link}>{label}</a> <span>${newPrice}/PER</span>\r\n                                    <p>{desc}</p>\r\n                                </label>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nexport const wildLifetotalSum = () => {}\r\nexport default WildlifeCenterApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport ActivityItem from './ActivityItem';\r\n\r\nconst highAdventure = [\r\n    {key:0,  price: 267, label: \"2 Ziplines - Flying V\", link: \"https://refreshingmountain.com/activities/2-ziplines-the-flying-v-run/\" },\r\n    {key:1,  price: 537, label: \"5 Ziplines + 9 Obstacles\", link: \"https://refreshingmountain.com/activities/5-ziplines-and-high-ropes-the-challenge-adventure-run/\" },\r\n    {key:2, price: 199, label: \"Climbing Tower (Outdoor)\", link: \"https://refreshingmountain.com/activities/climbing-tower-outdoor/\" },\r\n    {key:3, price: 128, label: \"Climbing Tower (Indoor)\", link: \"https://refreshingmountain.com/activities/indoor-climbing-wall/\" },\r\n    {key:4, price: 267, label: \"22 Elevated Obstacles\", link: \"https://refreshingmountain.com/activities/elevated-obstacle-course-2/\" },\r\n    {key:5, price: 153, label: \"Giant Ladder\", link: \"https://refreshingmountain.com/activities/giant-ladder/\" },\r\n    {key:6, price: 153, label: \"Giant Swing\", link: \"https://refreshingmountain.com/activities/giant-swing/\" },\r\n    {key:7, price: 153, label: \"Rappelling\", link: \"https://refreshingmountain.com/activities/rappelling/\" },\r\n];\r\n\r\n//const getFormattedPrice = (price) => `$${price.toFixed(0)}`;\r\n\r\nfunction HighAdventureApp() {\r\n\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, highAdventuretotalSum, setHighAdventuretotalSum, } = context;\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(highAdventure.length).fill(false)\r\n    );\r\n    \r\n    const _highAdventuretotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value\r\n                ? accumulator +\r\n                highAdventure.find(\r\n                    (subscriber) => subscriber.key + \"\" === key\r\n                  ).newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setHighAdventuretotalSum(_highAdventuretotalSum)\r\n    }, [_highAdventuretotalSum])\r\n\r\n\r\n    if ( constHours !== \"\" && medianSize < 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"highAdv\">\r\n                <ActivityHeader\r\n                    title=\"High Adventure Activities\"\r\n                    total={'$' +  highAdventuretotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">Nunc interdum lacus sit amet orci. Quisque id mi. Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Pellentesque commodo eros a enim.</p>\r\n                <ul className=\"no-bullets\">\r\n                    {highAdventure.map(({ price, label, link, desc, key }, index) => {\r\n                        let newPrice = 0;\r\n                        if (constHours !== \"\" && medianSize !== \"\" && isOvernight !== \"\") {\r\n                            if (isOvernight === false) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round((price * constHours) / medianSize);\r\n                            }\r\n                            else if (isOvernight === true) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round(((price * constHours) / medianSize) * 0.75);\r\n                            } else if (isOvernight === null) {\r\n                                newPrice = 0;\r\n                            }\r\n                        }else {\r\n                            newPrice = 0;\r\n                        }\r\n                        highAdventure[key].newPrice = newPrice;\r\n                        \r\n                        return (\r\n                            <li key={index}>\r\n                                <input\r\n                                    className='ck'\r\n                                    type=\"checkbox\"\r\n                                    defaultChecked={!!checkedState[index]}\r\n                                    onChange={() => {\r\n                                    setCheckedState({\r\n                                        ...checkedState,\r\n                                        [index]: !checkedState[index]\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                <label>\r\n                                    <a href={link}>{label}</a> <span>${newPrice}/PER</span>\r\n                                    <p>{desc}</p>\r\n                                </label>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const highAdventuretotalSum = () => {}\r\nexport default HighAdventureApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport ActivityItem from './ActivityItem';\r\n\r\nconst horsePrograms = [\r\n    { key: 0, price: 111, label: \"Farm Animal Experience\", link: \"https://refreshingmountain.com/activities/farm-animal-experience/\" },\r\n    { key: 1, price: 153, label: \"Horse Rides - Tethered\", link: \"https://refreshingmountain.com/activities/horse-rides/\" },\r\n];\r\n\r\n\r\nfunction HorseProgramsApp() {\r\n\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, horseProgramstotalSum, setHorseProgramstotalSum } = context;\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(horsePrograms.length).fill(false)\r\n    );\r\n\r\n\r\n    const _horseProgramsTotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value\r\n                ? accumulator +\r\n                horsePrograms.find(\r\n                    (subscriber) => subscriber.key + \"\" === key\r\n                  ).newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setHorseProgramstotalSum(_horseProgramsTotalSum)\r\n    }, [_horseProgramsTotalSum])\r\n\r\n    if ( constHours !== \"\" && medianSize < 80 ) {\r\n        return (\r\n            <div className=\"single-activity-section\" id=\"highAdv\">\r\n                <ActivityHeader\r\n                    title=\"Horse Program Activities\"\r\n                    total={'$' +  horseProgramstotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">Nunc interdum lacus sit amet orci. Quisque id mi. Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Pellentesque commodo eros a enim.</p>\r\n                <ul className=\"no-bullets\">\r\n                    {horsePrograms.map(({ label, link, desc, price, key }, index) => {\r\n                        let newPrice = 0;\r\n                        if (constHours !== \"\" && medianSize !== \"\" && isOvernight !== \"\") {\r\n                            if (isOvernight === false) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round((price * constHours) / medianSize);\r\n                            }\r\n                            else if (isOvernight === true) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round(((price * constHours) / medianSize) * 0.75);\r\n                            } else if (isOvernight === null) {\r\n                                newPrice = 0;\r\n                            }\r\n                        }else {\r\n                            newPrice = 0;\r\n                        }\r\n                        horsePrograms[key].newPrice = newPrice;\r\n                        return (\r\n                            <li key={index}>\r\n                                <input\r\n                                    className='ck'\r\n                                    type=\"checkbox\"\r\n                                    defaultChecked={!!checkedState[index]}\r\n                                    onChange={() => {\r\n                                    setCheckedState({\r\n                                        ...checkedState,\r\n                                        [index]: !checkedState[index]\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                <label>\r\n                                    <a href={link}>{label}</a> <span>${newPrice}/PER</span>\r\n                                    <p>{desc}</p>\r\n                                </label>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nexport const horseProgramsTotalSum = () => {}\r\nexport default HorseProgramsApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport ActivityItem from './ActivityItem';\r\n\r\nconst teambuilding = [\r\n    { key:0, price: 230, label: \"Escape Room (max of 10)\", link: \"https://refreshingmountain.com/activities/escape-room-ranch/\" },\r\n    { key:1, price: 88, label: \"Field Games\", link: \"https://refreshingmountain.com/activities/field-games/\" },\r\n    { key:2, price: 88, label: \"Physical Challenge Course\", link: \"https://refreshingmountain.com/activities/physical-challenge-course/\" },\r\n    { key:3, price: 88, label: \"Team Scavenger Hunt\", link: \"https://refreshingmountain.com/activities/team-scavenger-hunt/\" },\r\n    { key:4, price: 138, label: \"Team Puzzle Hunt\", link: \"https://refreshingmountain.com/activities/team-puzzlehunt/\" },\r\n    { key:5, price: 138, label: \"Teambuilding - 1 hour\", link: \"https://refreshingmountain.com/activities/teambuilding-2/\" },\r\n    { key:6, price: 221, label: \"Teambuilding - 2 hours\", link: \"https://refreshingmountain.com/activities/teambuilding-2/\" },\r\n];\r\n\r\n\r\nfunction TeambuildingApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, teamBuildingtotalSum, setTeamBuildingtotalSum } = context;\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(teambuilding.length).fill(false)\r\n    );\r\n\r\n    const _teamBuildingtotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value\r\n                ? accumulator +\r\n                teambuilding.find(\r\n                    (subscriber) => subscriber.key + \"\" === key\r\n                  ).newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setTeamBuildingtotalSum( _teamBuildingtotalSum)\r\n    }, [ _teamBuildingtotalSum])\r\n\r\n    if ( constHours !== \"\" && medianSize < 80 ) {\r\n        return (\r\n            <div className=\"single-activity-section\" id=\"highAdv\">\r\n                <ActivityHeader\r\n                    title=\"Team Building Activities\"\r\n                    total={'$' +  teamBuildingtotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">Nunc interdum lacus sit amet orci. Quisque id mi. Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Pellentesque commodo eros a enim.</p>\r\n                <ul className=\"no-bullets\">\r\n                    {teambuilding.map(({ label, link, desc, price, key }, index) => {\r\n                        let newPrice = 0;\r\n                        if (constHours !== \"\" && medianSize !== \"\" && isOvernight !== \"\") {\r\n                            if (isOvernight === false) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round((price * constHours) / medianSize);\r\n                            }\r\n                            else if (isOvernight === true) {\r\n                                //console.log(genRec[index].label);\r\n                                newPrice = Math.round(((price * constHours) / medianSize) * 0.75);\r\n                            } else if (isOvernight === null) {\r\n                                newPrice = 0;\r\n                            }\r\n                        }else {\r\n                            newPrice = 0;\r\n                        }\r\n                        teambuilding[key].newPrice = newPrice;\r\n\r\n                        return (\r\n                            <li key={index}>\r\n                                <input\r\n                                    className='ck'\r\n                                    type=\"checkbox\"\r\n                                    defaultChecked={!!checkedState[index]}\r\n                                    onChange={() => {\r\n                                    setCheckedState({\r\n                                        ...checkedState,\r\n                                        [index]: !checkedState[index]\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                <label>\r\n                                    <a href={link}>{label}</a> <span>${newPrice}/PER</span>\r\n                                    <p>{desc}</p>\r\n                                </label>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const teamBuildingtotalSum = () => {}\r\nexport default TeambuildingApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport ActivityItem from './ActivityItem';\r\n\r\nconst poolParties = [\r\n    { key: 0, price: 319, label: \"< 60 People\", link: \"https://refreshingmountain.com/activities/pool-parties-private-use/\" },\r\n    { key: 1, price: 398, label: \"61-120 People\", link: \"https://refreshingmountain.com/activities/pool-parties-private-use/\" },\r\n    { key: 2, price: 499, label: \"120+ People\", link: \"https://refreshingmountain.com/activities/pool-parties-private-use/\" },\r\n]\r\n\r\n\r\nfunction PoolPartiesApp() {\r\n    \r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, poolPartytotalSum, setPoolPartytotalSum } = context;\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(poolParties.length).fill(false)\r\n    );\r\n\r\n    const _poolPartytotalSum = useMemo(\r\n        () =>\r\n          Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value\r\n                ? accumulator +\r\n                poolParties.find(\r\n                    (subscriber) => subscriber.key + \"\" === key\r\n                  ).newPrice\r\n                : accumulator,\r\n            0\r\n          ),\r\n        [checkedState]\r\n    );\r\n\r\n    useEffect(()=> {\r\n        setPoolPartytotalSum(_poolPartytotalSum)\r\n    }, [_poolPartytotalSum])\r\n\r\n    if ( constHours !== \"\" && medianSize < 80 ) {\r\n        return (\r\n            <>\r\n                <div className=\"single-activity-section\" id=\"highAdv\">\r\n                    <ActivityHeader\r\n                        title=\"Pool Parties\"\r\n                        total={'$' +  poolPartytotalSum} \r\n                    />\r\n                    <p className=\"single-activity-description\">Nunc interdum lacus sit amet orci. Quisque id mi. Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Pellentesque commodo eros a enim.</p>\r\n                    <ul className=\"no-bullets\">\r\n                        {poolParties.map(({ price, label, link, desc, key }, index) => {\r\n                            let newPrice = 0;\r\n                            if (constHours !== \"\" && medianSize !== \"\" && isOvernight !== \"\") {\r\n                                if (isOvernight === false) {\r\n                                    //console.log(genRec[index].label);\r\n                                    newPrice = Math.round((price * constHours) / medianSize);\r\n                                }\r\n                                else if (isOvernight === true) {\r\n                                    //console.log(genRec[index].label);\r\n                                    newPrice = Math.round(((price * constHours) / medianSize) * 0.75);\r\n                                } else if (isOvernight === null) {\r\n                                    newPrice = 0;\r\n                                }\r\n                            }else {\r\n                                newPrice = 0;\r\n                            }\r\n                            poolParties[key].newPrice = newPrice;\r\n                            \r\n                            return (\r\n                                <li key={index}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                        setCheckedState({\r\n                                            ...checkedState,\r\n                                            [index]: !checkedState[index]\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{label}</a> <span>${newPrice}/PER</span>\r\n                                        <p>{desc}</p>\r\n                                    </label>\r\n                            </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        );}\r\n    else {\r\n        return false; \r\n    }\r\n}\r\nexport const poolPartytotalSum = () => {}\r\nexport default PoolPartiesApp; ","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport ActivityItem from './ActivityItem';\r\n\r\n\r\nconst genRec = [\r\n    { key: 0, price: 88, label: \"Archery\", link: \"https://refreshingmountain.com/activities/archery/\" },\r\n    { key: 1, price: 48, label: \"Campfire\", link: \"https://refreshingmountain.com/activities/campfires/\" },\r\n    { key: 2, price: 88, label: \"GPS Nature Hunt\", link: \"https://refreshingmountain.com/activities/gps-nature-hunt-navigation/\" },\r\n    { key: 3, price: 88, label: \"Orienteering\", link: \"https://refreshingmountain.com/activities/orienteering-navigation/\" },\r\n    { key: 4, price: 199, label: \"Paintball Targets\", link: \"https://refreshingmountain.com/activities/paintball-target-shooting-course/\" },\r\n    { key: 5, price: 153, label: \"Pedal Carts\", link: \"https://refreshingmountain.com/activities/pedal-carts/\" },\r\n    { key: 6, price: 88, label: \"Slingshots\", link: \"https://refreshingmountain.com/activities/sling-shots-4/\" },\r\n];\r\n\r\nfunction LargeGroupsApp() {\r\n\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, generalRecreationtotalSum, setGeneralRecreationtotalSum, } = context;\r\n\r\n    // const context = useContext(AppContext);\r\n    // const {constHours, medianSize, generalRecreationtotalSum, setGeneralRecreationtotalSum, } = context;\r\n\r\n    // const [checkedState, setCheckedState] = useState(\r\n    //     new Array(genRec.length).fill(false)\r\n    // );\r\n    \r\n    // const _generalRecreationtotalSum = useMemo(\r\n    //     () =>\r\n    //       Object.entries(checkedState).reduce(\r\n    //         (accumulator, [key, value]) =>\r\n    //           value\r\n    //             ? accumulator +\r\n    //             genRec.find(\r\n    //                 (subscriber) => subscriber.key + \"\" === key\r\n    //               ).newPrice\r\n    //             : accumulator,\r\n    //         0\r\n    //       ),\r\n    //     [checkedState]\r\n    // );\r\n\r\n    // useEffect(()=> {\r\n    //     setGeneralRecreationtotalSum(_generalRecreationtotalSum)\r\n    // }, [_generalRecreationtotalSum])\r\n\r\n\r\n    if ( constHours !== \"\" && medianSize == 80 ) {\r\n        return (\r\n            <>\r\n                <div className=\"single-activity-section\" id=\"genRec\">\r\n                    <div className=\"single-activity-header\">\r\n                        <div className=\"activity-name\">\r\n                            <h3 className=\"heading-style\">For Large Groups</h3>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"single-activity-description\">Due to the time and heavier coordination required to get large groups combination of activities, we'd love to talk to you about the vision for your day.\r\n                        We have successfully hosted groups of nearly 300 for a day retreat, and we're confident we can make it work for you!\r\n                        <a href=\"\" className=\"inquiry-btn\">Send Inqury</a>\r\n                    </p>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LargeGroupsApp;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button'; \r\n\r\nclass FormApp extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            groupName: \"\",\r\n            groupType: \"\",\r\n            date: \"\",\r\n            comments: \"\",\r\n        }\r\n        this.onClicking = this.onClicking.bind(this);\r\n    }\r\n\r\n    onClicking = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.firstName);\r\n        console.log(this.state.lastName);\r\n        console.log(this.state.email);\r\n        console.log(this.state.phoneNumber);\r\n        console.log(this.state.groupName);\r\n        console.log(this.state.groupType);\r\n        console.log(this.state.date);\r\n        console.log(this.state.comments);\r\n        alert(\"Thanks for contacting us!\");\r\n    }\r\n\r\n    onFirstNameChange = (e) => this.setState({ ...this.state, firstName: e.target.value});\r\n    onLastNameChange = (e) => this.setState({ ...this.state, lastName: e.target.value});\r\n    onEmailChange = (e) => this.setState({ ...this.state, email: e.target.value});\r\n    onPhoneNumberChange = (e) => this.setState({ ...this.state, phoneNumber: e.target.value});\r\n    onGroupNameChange = (e) => this.setState({ ...this.state, groupName: e.target.value});\r\n    onGroupTypeChange = (e) => this.setState({ ...this.state, groupType: e.target.value});\r\n    onDateChange = (e) => this.setState({ ...this.state, date: e.target.value});\r\n    onCommentsChange = (e) => this.setState({ ...this.state, comments: e.target.value});\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid=\"lg\">\r\n                    <h1 style={{ textAlign: 'center' }}>Heading for Form</h1>\r\n                    <br/>\r\n                    <br/>\r\n                    <Form onSubmit={this.onClicking}>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>First Name:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Please enter first name\" onChange={this.onFirstNameChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Last Name:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Please enter last name\" onChange={this.onLastNameChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Email:</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Please enter email\" onChange={this.onEmailChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Phone Number:</Form.Label>\r\n                                    <Form.Control placeholder=\"Please enter phone number\" onChange={this.onPhoneNumberChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Group Name: (optional)</Form.Label>\r\n                                    <Form.Control placeholder=\"Please enter group name\" onChange={this.onGroupNameChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Group Type:</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.onGroupTypeChange}>\r\n                                        <option id=\"type\">Please select group type:</option>\r\n                                        <option id=\"families\">Families</option>\r\n                                        <option id=\"children\">Children</option>\r\n                                        <option id=\"teens\">Teens</option>\r\n                                        <option id=\"men\">Men</option>\r\n                                        <option id=\"women\">Women</option>\r\n                                        <option id=\"other\">Other</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Desired Dates:</Form.Label>\r\n                                    <Form.Control placeholder=\"Please enter desired dates\" onChange={this.onDateChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col sm=\"12\" lg=\"6\">\r\n                                <Form.Group style={{ textAlign: 'left' }}>\r\n                                    <Form.Label>Comments or Questions?</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} onChange={this.onCommentsChange} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group onSubmit={this.onClicking}>\r\n                                    <Button variant=\"primary\" type=\"submit\" size=\"lg\">Submit</Button>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormApp;","import React, { useState, useContext, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBFooter } from \"mdbreact\";\r\nimport { Link } from 'react-scroll';\r\nimport './Footer.css';\r\n\r\nimport { teambuildingTotalPrice } from '../Activities/Teambuilding';\r\nimport { poolPartiesTotalPrice } from '../Activities/PoolParties';\r\nimport {AppContext} from '../AppContext'\r\nimport { groupType } from '../RetreatSelection/RetreatType';\r\n\r\nfunction getFormattedPrice(price) {\r\n    return `${price.toFixed(2)}`;\r\n}\r\n\r\nlet sideBarClass = 'estimate-sidebar';\r\nfunction FooterApp() {\r\n    const context = useContext(AppContext);\r\n    const {groupSize, constHours, medianSize, highAdventuretotalSum, generalRecreationtotalSum, wildLifetotalSum, teamBuildingtotalSum, horseProgramstotalSum, poolPartytotalSum } = context;\r\n\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    // const handleOnChange = () => {\r\n    //     //Array with all prices\r\n    //     let allPrices = [generalRecreationtotalSum,wildLifetotalSum,highAdventuretotalSum,teamBuildingtotalSum,horseProgramstotalSum,poolPartytotalSum]; \r\n        \r\n    //     //Remove any undefined values from array\r\n    //     let filteredPrices = allPrices.filter(function(x) {\r\n    //         return x !== undefined;\r\n    //     });\r\n\r\n    //     console.log(filteredPrices);\r\n    //     if (genRecTotalPrice == null) {\r\n    //         alert(\"Please make an activity selection first\");\r\n    //     }\r\n    //     else if (genRecTotalPrice != null) {\r\n    //         const sum =  filteredPrices.reduce((result,number)=> result+number);\r\n            \r\n    //         setTotalPrice(sum.toFixed(0));\r\n    //     }\r\n    // };\r\n\r\n    useEffect(()=> {\r\n        //Array with all prices\r\n        let allPrices = [\r\n            generalRecreationtotalSum,\r\n            wildLifetotalSum,\r\n            highAdventuretotalSum,\r\n            teamBuildingtotalSum,\r\n            horseProgramstotalSum,\r\n            poolPartytotalSum]; \r\n        \r\n        //Remove any undefined values from array\r\n        let filteredPrices = allPrices.filter(function(x) {\r\n            return x !== undefined;\r\n        });\r\n        const sum =  filteredPrices.reduce((result,number)=> result+number);\r\n        setTotalPrice(sum);\r\n        if ( medianSize < 80 ) {\r\n            sideBarClass = 'estimate-sidebar';\r\n        } else {\r\n            sideBarClass = 'estimate-sidebar dim-sidebar';\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MDBFooter className={sideBarClass} id=\"horseProg\">\r\n                <h3>Your Group Price Estimate</h3>\r\n                <div>\r\n                    <h4>Average Price Per Person</h4>\r\n                    <ul>\r\n                        <li><Link activeClass={\"active\"} to=\"highAdv\" spy={true} offset={-20} smooth={true} duration={700}>High Adventure Activities<span>${ Math.round(highAdventuretotalSum)}</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"teamBuild\" spy={true} offset={-20} smooth={true} duration={700}>Teambuilding Activities<span>${ Math.round(teamBuildingtotalSum)}</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"wildlife\" spy={true} offset={-20} smooth={true} duration={700}>Wildlife Center Activities<span>${ Math.round(wildLifetotalSum)}</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"horsePro\" spy={true} offset={-20}smooth={true} duration={700}>Horse Program Activities<span>${ Math.round(horseProgramstotalSum)}</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"genRec\" spy={true} offset={-20} smooth={true} duration={700}>General Recreation Activities<span> ${ Math.round(generalRecreationtotalSum) }</span></Link> </li>\r\n                        <li><Link activeClass=\"active\" to=\"pool\" spy={true} offset={-20} smooth={true} duration={700}>Pool Parties <span>${ Math.round(poolPartytotalSum)}</span></Link></li>\r\n                    </ul>\r\n                    <div className=\"finalPrice\">\r\n                        <div>\r\n                            <span>{ totalPrice }</span> \r\n                            <span>Per Person Estimate</span> \r\n                        </div>\r\n                        <div>\r\n                            <a href=\r\n                                { \r\n                                    'https://refreshingmountain.com/day-activity-calculator-results/?' +\r\n                                    'size='         + groupSize +\r\n                                    '&type='        + groupType +\r\n                                    '&highAdv='     + highAdventuretotalSum +\r\n                                    '&teamBld='     + teamBuildingtotalSum +\r\n                                    '&wildLife='    + wildLifetotalSum +\r\n                                    '&horsePrg='    + horseProgramstotalSum +\r\n                                    '&genRec='      + generalRecreationtotalSum +\r\n                                    '&poolPrty='    + poolPartytotalSum +\r\n                                    '&total='       + totalPrice\r\n                                } \r\n                                \r\n                                className=\"click-price-btn\">Send Copy</a>\r\n                        </div> \r\n                    </div>\r\n            \r\n                    <p className=\"text-center\"><strong>Group Type Discounts: </strong>Day Groups may be eligible for discount with week day bookings, Monday through Friday.</p>\r\n                    <p className=\"text-center\">*Group events are price as a flat rate. This “pp” estimate is meant to help with planning, but final billing will be set as a flat price, with a min/max # of people that the schedule can accommodate</p>\r\n                </div>\r\n            </MDBFooter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterApp;","import React, { useState, useEffect, useContext} from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nimport './App.css';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport HeadingApp from './RetreatSelection/Heading';\r\nimport RetreatSizeApp from './RetreatSelection/RetreatSize';\r\nimport RetreatTypeApp from './RetreatSelection/RetreatType';\r\nimport GeneralActivitiesApp from './Activities/GeneralRecreation';\r\nimport WildlifeCenterApp from './Activities/WildlifeCenter';\r\nimport HighAdventureApp from './Activities/HighAdventure';\r\nimport HorseProgramsApp from './Activities/HorsePrograms';\r\nimport TeambuildingApp from './Activities/Teambuilding';\r\nimport PoolPartiesApp from './Activities/PoolParties';\r\nimport LargeGroupsApp from './Activities/LargeGroups';\r\n\r\nimport FormApp from './Form/Form';\r\nimport FooterApp from './Footer/Footer';\r\nimport { isOvernight, groupType } from './RetreatSelection/RetreatType';\r\nimport {AppContext} from './AppContext';\r\n\r\n\r\n\r\nfunction App() {\r\n    const context = useContext(AppContext)\r\n\r\n    const [groupSize, setGroupSize] = useState(0);\r\n    const [groupType, setGroupType] = useState(\"\");\r\n\r\n    const [constHours,  setConstHours] = useState(\"\");\r\n    const [constSize,   setConstSize] = useState(\"\");\r\n    const [medianSize,  setMedianSize] = useState(\"\");\r\n\r\n    const [highAdventuretotalSum,       setHighAdventuretotalSum] = useState(\"\");\r\n    const [generalRecreationtotalSum,   setGeneralRecreationtotalSum] = useState(\"\");\r\n    const [wildLifetotalSum,            setWildLifetotalSum] = useState(\"\");\r\n    const [teamBuildingtotalSum,        setTeamBuildingtotalSum] = useState(\"\");\r\n    const [horseProgramstotalSum,       setHorseProgramstotalSum] = useState(\"\");\r\n    const [poolPartytotalSum,           setPoolPartytotalSum] = useState(\"\");\r\n\r\n\r\n    const initialValue = {\r\n        groupSize,\r\n        setGroupSize,\r\n        groupType,\r\n        setGroupType,\r\n        constHours,     setConstHours,\r\n        constSize,      setConstSize,\r\n        medianSize,     setMedianSize,\r\n\r\n        highAdventuretotalSum,      setHighAdventuretotalSum,\r\n        generalRecreationtotalSum,  setGeneralRecreationtotalSum,\r\n        wildLifetotalSum,           setWildLifetotalSum,\r\n        teamBuildingtotalSum,       setTeamBuildingtotalSum,\r\n        horseProgramstotalSum,      setHorseProgramstotalSum,\r\n        poolPartytotalSum,           setPoolPartytotalSum\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={initialValue}>\r\n            <div className=\"App\">\r\n                <Container>\r\n                    <Row className=\"filter-bar\">\r\n                        <Col className=\"heading-intro\" sm=\"12\" lg=\"4\">\r\n                            <HeadingApp />\r\n                        </Col>\r\n                        <Col className=\"retreat-size\" sm=\"12\" lg=\"4\">\r\n                            <RetreatSizeApp />\r\n                        </Col>\r\n                        <Col className=\"retreat-type\" sm=\"12\" lg=\"4\">\r\n                            <RetreatTypeApp />\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"activity-detail\">\r\n                        <p>Activities can generally accommodate 20 people per hour. Example, with a group size of 20-39 you would need 2 activities to keep everyone occupied over 2 hrs. The pricing automatically recognizes number of hours needed based on your group size.</p>\r\n                    </div>\r\n                    <Row>\r\n                        <Col sm=\"12\" lg=\"8\">\r\n                            <HighAdventureApp />\r\n                            <TeambuildingApp />\r\n                            <WildlifeCenterApp />\r\n                            <HorseProgramsApp />\r\n                            <GeneralActivitiesApp />     \r\n                            <PoolPartiesApp />\r\n                            <LargeGroupsApp />\r\n                        </Col>\r\n                        <Col className=\"sidebar\" sm=\"12\" lg=\"4\">\r\n                            <FooterApp />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AppContext } from './AppContext';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n          <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
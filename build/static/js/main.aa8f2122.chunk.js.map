{"version":3,"sources":["RetreatSelection/Heading.js","AppContext.js","RetreatSelection/RetreatSize.js","RetreatSelection/RetreatType.js","RetreatSelection/RetreatEventType.js","Activities/ActivityHeader.js","Activities/GeneralRecreation.js","Activities/WildlifeCenter.js","Activities/HighAdventure.js","Activities/HorsePrograms.js","Activities/Teambuilding.js","Activities/PoolParties.js","Activities/LargeGroups.js","Activities/NothingSelected.js","Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Container","Row","Col","AppContext","React","createContext","constHours","constSize","medianSize","RetreatSizeApp","context","useContext","Form","Group","as","controlId","Label","Control","onChange","e","setGroupSize","target","value","setConstHours","setConstSize","setMedianSize","id","constType","RetreatTypeApp","setGroupType","defaultValue","RetreatEventTypeApp","setGroupEventType","ActivityHeader","title","total","desc","className","GeneralRecreationApp","groupType","groupEventType","generalRecreation","groupSize","setGeneralRecreation","generalRecreationtotalSum","setGeneralRecreationtotalSum","setGeneralRecreationtotalGroupSum","generalRecreationtotalGroupSum","selectedGeneralRecreationItems","setSelectedGeneralRecreationItems","useState","generalRecreationDesc","setGeneralRecreationDesc","useEffect","axios","get","then","res","data","catch","error","console","log","description","Array","length","fill","checkedState","setCheckedState","_generalRecreationtotalSum","Object","entries","reduce","accumulator","key","find","subscriber","newPrice","map","index","acf","link","newTitle","rendered","Math","round","price","adminTitle","hide_in_app","type","defaultChecked","_items","GeneralRecreation","filter","item","push","href","WildlifeCenterApp","wildLife","setWildLife","wildLifetotalSum","setWildLifetotalSum","setWildLifetotalGroupSum","wildLifetotalGroupSum","selectedWildLifeItems","setSelectedWildLifeItems","wildLifeDesc","setWildLifeDesc","_wildLifetotalSum","replace","WildLife","HighAdventureApp","highAdventure","setHighAdventure","highAdventuretotalSum","setHighAdventuretotalSum","setHighAdventuretotalGroupSum","highAdventuretotalGroupSum","selectedHighAdventureItems","setSelectedHighAdventureItems","highAdventureDesc","setHighAdventureDesc","_highAdventuretotalSum","HighAdventure","HorseProgramsApp","horsePrograms","setHorsePrograms","horseProgramstotalSum","setHorseProgramstotalSum","setHorseProgramstotalGroupSum","horseProgramstotalGroupSum","selectedHorseProgramsItems","setSelectedHorseProgramsItems","horseProgDesc","setHorseProgDesc","_horseProgramstotalSum","HorsePrograms","TeambuildingApp","teamBuilding","setTeamBuilding","teamBuildingtotalSum","setTeamBuildingtotalSum","setTeamBuildingtotalGroupSum","teamBuildingtotalGroupSum","selectedTeamBuildingItems","setSelectedTeamBuildingItems","teamBuildingDesc","setTeamBuildingDesc","_teamBuildingtotalSum","TeamBuilding","PoolPartiesApp","poolParties","setPoolParties","poolPartytotalSum","setPoolPartytotalSum","setPoolPartytotalGroupSum","poolPartytotalGroupSum","selectedPoolPartyItems","setSelectedPoolPartyItems","poolPartyDesc","setPoolPartyDesc","_poolPartytotalSum","PoolParty","LargeGroupsApp","NothingSelectedAPp","FooterApp","totalGroupPrice","setTotalGroupPrice","highAdvActArray","highAdvActString","join","teamBuildingActArray","teamBuildingActString","wildLifeActArray","wildLifeActString","horseActArray","horseActString","genRecActArray","genRecActString","poolPartyActArray","poolPartyActString","totalPrice","setTotalPrice","allPrices","sum","x","undefined","result","number","activeClass","to","spy","offset","smooth","duration","displayType","thousandSeparator","prefix","App","initialValue","Provider","sm","lg","Heading","RetreatEventType","RetreatSize","RetreatType","NothingSelected","Teambuilding","WildlifeCenter","PoolParties","LargeGroups","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAiBiBA,EAbF,WACX,OACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,8DACA,+G,SCTPC,EAAaC,IAAMC,cAAc,ICI1CC,EAAa,GACbC,EAAY,GACZC,EAAa,GAuDFC,EArDQ,WACnB,IAAMC,EAAUC,qBAAWR,GA4BvB,OACI,cAACH,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACU,EAAA,EAAD,UACI,cAACA,EAAA,EAAKX,IAAN,UACI,eAACW,EAAA,EAAKC,MAAN,CAAYC,GAAIZ,IAAKa,UAAU,eAA/B,UACI,cAACH,EAAA,EAAKI,MAAN,+BACA,eAACJ,EAAA,EAAKK,QAAN,CAAcH,GAAG,SAASI,SAnCrC,SAACC,GAIlB,OAFAT,EAAQU,aAAaD,EAAEE,OAAOC,OAC9Bf,EAAYY,EAAEE,OAAOC,OAEnB,IAAK,gBACHhB,EAAa,EACbE,EAAa,GACb,MACF,IAAK,gBACHF,EAAa,EACbE,EAAa,GACb,MACF,IAAK,gBACHF,EAAa,EACbE,EAAa,GACb,MACF,IAAK,cACHF,EAAa,EACbE,EAAa,GAIjBE,EAAQa,cAAcjB,GACtBI,EAAQc,aAAajB,GACrBG,EAAQe,cAAcjB,IAUM,UACI,wBAAQkB,GAAG,OAAX,+BACA,wBAAQA,GAAG,QAAX,2BACA,wBAAQA,GAAG,QAAX,2BACA,wBAAQA,GAAG,OAAX,2BACA,wBAAQA,GAAG,MAAX,0CC7CpCC,EAAY,GA4CDC,EAxCQ,WACnB,IAAMlB,EAAUC,qBAAWR,GAiB3B,OACI,cAACH,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACU,EAAA,EAAD,UACI,cAACA,EAAA,EAAKX,IAAN,UACI,eAACW,EAAA,EAAKC,MAAN,CAAYC,GAAIZ,IAAKa,UAAU,eAA/B,UACI,cAACH,EAAA,EAAKI,MAAN,gCACA,eAACJ,EAAA,EAAKK,QAAN,CAAcH,GAAG,SAASI,SAxBjC,SAACC,GAGlB,OAFAT,EAAQmB,aAAaV,EAAEE,OAAOC,OAC9BK,EAAYR,EAAEE,OAAOC,OAEnB,IAAK,aACW,EACd,MACF,IAAK,mBACW,EAKnBZ,EAAQmB,aAAaF,IAWI,UACI,wBAAQD,GAAG,OAAOJ,MAAM,OAAxB,+BACA,wBAAQQ,cAAY,EAACJ,GAAG,MAAMJ,MAAM,MAApC,uBACA,wBAAQI,GAAG,YAAYJ,MAAM,YAA7B,8CCjChCK,EAAY,GAqCDI,EAjCa,WACxB,IAAMrB,EAAUC,qBAAWR,GAQ3B,OACI,cAACH,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACU,EAAA,EAAD,UACI,cAACA,EAAA,EAAKX,IAAN,UACI,eAACW,EAAA,EAAKC,MAAN,CAAYC,GAAIZ,IAAKa,UAAU,aAA/B,UACI,cAACH,EAAA,EAAKI,MAAN,gCACA,eAACJ,EAAA,EAAKK,QAAN,CAAcH,GAAG,SAASI,SAf5B,SAACC,GACvBT,EAAQsB,kBAAkBb,EAAEE,OAAOC,OACnCK,EAAYR,EAAEE,OAAOC,MAEtBZ,EAAQsB,kBAAkBL,IAWD,UACI,wBAAQD,GAAG,OAAOJ,MAAM,OAAxB,+BACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,oBAAd,+BACA,wBAAQA,MAAM,wBAAd,mCACA,wBAAQA,MAAM,QAAd,oC,gCCXrBW,G,MAnBQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAiB,EAAVC,KAEpC,OACI,sBAAKC,UAAU,yBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,gBAAd,cAAgCH,OAEpC,qBAAKG,UAAU,sBAAf,SACI,gCACI,0DACA,+BAAOF,cCuHpB,IACQG,EA7Hf,WACI,IAAM5B,EAAUC,qBAAWR,GACpBG,EAKHI,EALGJ,WAAYE,EAKfE,EALeF,WAAY+B,EAK3B7B,EAL2B6B,UAAWC,EAKtC9B,EALsC8B,eACtCC,GAIA/B,EALsDgC,UAKtDhC,EAJA+B,mBAAmBE,EAInBjC,EAJmBiC,qBACnBC,EAGAlC,EAHAkC,0BAA2BC,EAG3BnC,EAH2BmC,6BACKC,GAEhCpC,EAFAqC,+BAEArC,EAFgCoC,mCAChCE,EACAtC,EADAsC,+BAAgCC,EAChCvC,EADgCuC,kCAEpC,EAA0DC,mBAAS,IAAnE,mBAAOC,EAAP,KAA8BC,EAA9B,KAGAC,qBAAU,WAENC,IAAMC,IAAI,yLACTC,MAAK,SAAAC,GACFd,EAAqBc,EAAIC,SAE5BC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAIhBN,IAAMC,IAAI,wEACTC,MAAK,SAAAC,GACFL,EAAyBK,EAAIC,KAAKK,kBAEvC,IAEH,MAAwCb,mBACpC,IAAIc,MAAMvB,EAAkBwB,QAAQC,MAAK,IAD7C,mBAAOC,EAAP,KAAqBC,EAArB,KAoBA,OAfAf,qBAAU,WACN,IAAMgB,EAA8BC,OAAOC,QAAQJ,GAAcK,QAC7D,SAACC,EAAD,4BAAeC,EAAf,iBAEMD,GAAW,UACbhC,EAAkBkC,MACd,SAACC,GAAD,OAAgBA,EAAWlD,GAAK,KAAOgD,YAF9B,aACb,EAEKG,UACHJ,IACN,GAEJ5B,EAA6BwB,GAC7BvB,EAAmCuB,EAA6B7D,KACjE,CAAC2D,EAAc3D,EAAY+B,IAEX,IAAdA,GAAkC,KAAf/B,GAAwC,kBAAnBgC,GAErC,mCACA,sBAAKH,UAAU,0BAA0BX,GAAG,SAA5C,UACI,cAAC,EAAD,CACIQ,MAAM,gCACNC,MAAO,IAAOS,IAElB,mBAAGP,UAAU,8BAAb,SACOc,IAEP,oBAAId,UAAU,aAAd,SACKI,EAAkBqC,KAAI,WAA4BC,GAAW,IAApCrD,EAAmC,EAAnCA,GAAIQ,EAA+B,EAA/BA,MAAO8C,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KAClCJ,EAAW,EACXK,EAAWhD,EAAMiD,SAGjBN,EADc,QAAdtC,EACY6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAC7B,cAAd+B,EACM6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAAc,IAEtD,EAEfqE,EAAWO,KAAKC,MAAMR,GAEtB,IAAIU,EAAaL,EAGjB,GAFAzC,EAAkBsC,GAAOF,SAAWA,GAEX,IAApBG,EAAIQ,YACL,OACI,+BACI,uBACInD,UAAU,KACVoD,KAAK,WACLC,iBAAkBvB,EAAaY,GAC/B7D,SAAU,WAAO,IAAD,EACZkD,EAAgB,2BACTD,GADQ,kBAEVzC,GAAMyC,EAAazC,MAGxB,IAAIiE,EAAM,iBAAG3C,QAAH,IAAGA,OAAH,EAAGA,EAAgC4C,yBAAnC,QAAwD,GAC7DzB,EAAazC,IAOdiE,EAASA,EAAOE,QAAO,SAAAC,GAAI,OAAEA,IAASP,KACtCtC,EAAkC,2BAC3BD,GAD0B,IAE7B4C,kBAAmBD,OATvBA,EAAOI,KAAKR,GACZtC,EAAkC,2BAC3BD,GAD0B,IAE7B4C,kBAAmBD,SAanC,kCACI,mBAAGK,KAAMf,EAAT,SAAgBC,IADpB,IACkC,qCAAQE,KAAKC,MAAMR,GAAnB,eA9B7BnD,cC6ClC,IACQuE,EA3Hf,WACI,IAAMvF,EAAUC,qBAAWR,GACpBG,EAKHI,EALGJ,WAAYE,EAKfE,EALeF,WAAY+B,EAK3B7B,EAL2B6B,UAAWC,EAKtC9B,EALsC8B,eACtC0D,EAIAxF,EAJAwF,SAAUC,EAIVzF,EAJUyF,YACVC,EAGA1F,EAHA0F,iBAAkBC,EAGlB3F,EAHkB2F,oBACKC,GAEvB5F,EAFA6F,sBAEA7F,EAFuB4F,0BACvBE,EACA9F,EADA8F,sBAAuBC,EACvB/F,EADuB+F,yBAE3B,EAAwCvD,mBAAS,GAAjD,mBAAOwD,EAAP,KAAqBC,EAArB,KAGAtD,qBAAU,WAENC,IAAMC,IAAI,yLACTC,MAAK,SAAAC,GACF0C,EAAY1C,EAAIC,SAEnBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAIhBN,IAAMC,IAAI,wEACTC,MAAK,SAAAC,GACFkD,EAAgBlD,EAAIC,KAAKK,kBAE9B,IAEH,MAAwCb,mBACpC,IAAIc,MAAMkC,EAASjC,QAAQC,MAAK,IADpC,mBAAOC,EAAP,KAAqBC,EAArB,KAoBA,OAfAf,qBAAU,WACN,IAAMuD,EAAqBtC,OAAOC,QAAQJ,GAAcK,QACpD,SAACC,EAAD,4BAAeC,EAAf,iBAEMD,GAAW,UACbyB,EAASvB,MACL,SAACC,GAAD,OAAgBA,EAAWlD,GAAK,KAAOgD,YAF9B,aACb,EAEKG,UACHJ,IACN,GAEJ4B,EAAoBO,GACpBN,EAA0BM,EAAoBpG,KAC/C,CAAC2D,EAAc3D,EAAY+B,IAEX,IAAdA,GAAkC,KAAf/B,GAAwC,kBAAnBgC,GAErC,mCACA,sBAAKH,UAAU,0BAA0BX,GAAG,WAA5C,UACI,cAAC,EAAD,CACIQ,MAAM,sBACNC,MAAO,IAAOiE,IAElB,mBAAG/D,UAAU,8BAAb,SACMqE,IAEN,oBAAIrE,UAAU,aAAd,SACK6D,EAASpB,KAAI,WAA4BC,GAAW,IAApCrD,EAAmC,EAAnCA,GAAIQ,EAA+B,EAA/BA,MAAO8C,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KACzBJ,EAAW,EACXK,EAAWhD,EAAMiD,SAGjBN,EADc,QAAdtC,EACY6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAC7B,cAAd+B,EACM6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAAc,IAEtD,EAEfqE,EAAWO,KAAKC,MAAMR,GAEtB,IAAIU,EAAaL,EAAS2B,QAAQ,SAAU,KAG5C,GAFAX,EAASnB,GAAOF,SAAWA,GAEF,IAApBG,EAAIQ,YACL,OACI,+BACI,uBACInD,UAAU,KACVoD,KAAK,WACLC,iBAAkBvB,EAAaY,GAC/B7D,SAAU,WAAO,IAAD,EACZkD,EAAgB,2BACTD,GADQ,kBAEVzC,GAAMyC,EAAazC,MAGxB,IAAIiE,EAAM,iBAAGa,QAAH,IAAGA,OAAH,EAAGA,EAAuBM,gBAA1B,QAAsC,GAC3C3C,EAAazC,IAOdiE,EAASA,EAAOE,QAAO,SAAAC,GAAI,OAAEA,GAAQP,KACrCkB,EAAyB,2BAClBD,GADiB,IAEpBM,SAAUnB,OATdA,EAAOI,KAAKR,GACZkB,EAAyB,2BAClBD,GADiB,IAEpBM,SAAUnB,SAY1B,kCACI,mBAAGK,KAAMf,EAAT,SAAgBC,EAAS2B,QAAQ,SAAU,OAD/C,IACyD,qCAAQzB,KAAKC,MAAMR,GAAnB,eA7BpDnD,cC4ClC,IACQqF,EA5Hf,WACI,IAAMrG,EAAUC,qBAAWR,GACpBG,EAKHI,EALGJ,WAAYE,EAKfE,EALeF,WAAY+B,EAK3B7B,EAL2B6B,UAC3ByE,EAIAtG,EAJAsG,cAAeC,EAIfvG,EAJeuG,iBACfC,EAGAxG,EAHAwG,sBAAuBC,EAGvBzG,EAHuByG,yBACKC,GAE5B1G,EAFA2G,2BAEA3G,EAF4B0G,+BAC5BE,EACA5G,EADA4G,2BAA4BC,EAC5B7G,EAD4B6G,8BAEhC,EAAkDrE,mBAAS,uBAA3D,mBAAOsE,EAAP,KAA0BC,EAA1B,KAGApE,qBAAU,WAENC,IAAMC,IAAI,yLACTC,MAAK,SAAAC,GACFwD,EAAiBxD,EAAIC,SAExBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAGhBN,IAAMC,IAAI,wEACTC,MAAK,SAAAC,GACFgE,EAAqBhE,EAAIC,KAAKK,kBAGnC,IAEH,MAAwCb,mBACpC,IAAIc,MAAMgD,EAAc/C,QAAQC,MAAK,IADzC,mBAAOC,EAAP,KAAqBC,EAArB,KAsBA,OAjBAf,qBAAU,WACN,IAAMqE,EAA0BpD,OAAOC,QAAQJ,GAAcK,QACzD,SAACC,EAAD,4BAAeC,EAAf,iBAEMD,GAAW,UACbuC,EAAcrC,MACV,SAACC,GAAD,OAAgBA,EAAWlD,GAAK,KAAOgD,YAF9B,aACb,EAEKG,UACHJ,IACN,GAEJ0C,EAAyBO,GACzBN,EAA+BM,EAAyBlH,GAExDqD,QAAQC,IAAIwD,KACb,CAACnD,EAAc3D,EAAY+B,IAEX,IAAdA,GAAkC,KAAf/B,GAEhB,mCACA,sBAAK6B,UAAU,0BAA0BX,GAAG,UAA5C,UACI,cAAC,EAAD,CACIQ,MAAM,4BACNC,MAAO,IAAO+E,IAElB,mBAAG7E,UAAU,8BAAb,SACOmF,IAEP,oBAAInF,UAAU,aAAd,SACK2E,EAAclC,KAAI,WAA4BC,GAAW,IAApCrD,EAAmC,EAAnCA,GAAIQ,EAA+B,EAA/BA,MAAO8C,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KAC9BJ,EAAW,EACXK,EAAWhD,EAAMiD,SAGjBN,EADc,QAAdtC,EACY6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAC5B,cAAd+B,EACK6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAAc,IAEtD,EAEfqE,EAAWO,KAAKC,MAAMR,GAEtB,IAAIU,EAAaL,EAEjB,GADA8B,EAAcjC,GAAOF,SAAWA,GACP,IAApBG,EAAIQ,YACL,OACI,+BACI,uBACInD,UAAU,KACVoD,KAAK,WACLC,iBAAkBvB,EAAaY,GAC/B7D,SAAU,WAAO,IAAD,EACZkD,EAAgB,2BACTD,GADQ,kBAEVzC,GAAMyC,EAAazC,MAGxB,IAAIiE,EAAM,iBAAG2B,QAAH,IAAGA,OAAH,EAAGA,EAA4BK,qBAA/B,QAAgD,GACrDxD,EAAazC,IAQdiE,EAASA,EAAOE,QAAO,SAAAC,GAAI,OAAEA,IAASP,KACtCgC,EAA8B,2BACvBD,GADsB,IAEzBK,cAAehC,OAVnBA,EAAOI,KAAKR,GACZgC,EAA8B,2BACvBD,GADsB,IAEzBK,cAAehC,SAY/B,kCACI,mBAAGK,KAAMf,EAAT,SAAgBC,IADpB,IACkC,qCAAQE,KAAKC,MAAMR,GAAnB,eA7B7BnD,cC0ClC,IACQkG,EAzHf,WACI,IAAMlH,EAAUC,qBAAWR,GACpBG,EAKHI,EALGJ,WAAYE,EAKfE,EALeF,WAAY+B,EAK3B7B,EAL2B6B,UAAWC,EAKtC9B,EALsC8B,eACtCqF,EAIAnH,EAJAmH,cAAeC,EAIfpH,EAJeoH,iBACfC,EAGArH,EAHAqH,sBAAuBC,EAGvBtH,EAHuBsH,yBACKC,GAE5BvH,EAFAwH,2BAEAxH,EAF4BuH,+BAC5BE,EACAzH,EADAyH,2BAA4BC,EAC5B1H,EAD4B0H,8BAEhC,EAA0ClF,mBAAS,IAAnD,mBAAOmF,EAAP,KAAsBC,EAAtB,KAGAjF,qBAAU,WAENC,IAAMC,IAAI,yLACTC,MAAK,SAAAC,GACFqE,EAAiBrE,EAAIC,SAExBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAGhBN,IAAMC,IAAI,wEACTC,MAAK,SAAAC,GACF6E,EAAiB7E,EAAIC,KAAKK,kBAE/B,IAEH,MAAwCb,mBACpC,IAAIc,MAAM6D,EAAc5D,QAAQC,MAAK,IADzC,mBAAOC,EAAP,KAAqBC,EAArB,KAqBA,OAhBAf,qBAAU,WACN,IAAMkF,EAA0BjE,OAAOC,QAAQJ,GAAcK,QACzD,SAACC,EAAD,4BAAeC,EAAf,iBAEMD,GAAW,UACboD,EAAclD,MACV,SAACC,GAAD,OAAgBA,EAAWlD,GAAK,KAAOgD,YAF9B,aACb,EAEKG,UACHJ,IACN,GAEJuD,EAAyBO,GACzBN,EAA+BM,EAAyB/H,KACzD,CAAC2D,EAAc3D,EAAY+B,IAGX,IAAdA,GAAkC,KAAf/B,GAAwC,kBAAnBgC,GAErC,mCACA,sBAAKH,UAAU,0BAA0BX,GAAG,WAA5C,UACI,cAAC,EAAD,CACIQ,MAAM,2BACNC,MAAO,IAAO4F,IAElB,mBAAG1F,UAAU,8BAAb,SACOgG,IAEP,oBAAIhG,UAAU,aAAd,SACKwF,EAAc/C,KAAI,WAA4BC,GAAW,IAApCrD,EAAmC,EAAnCA,GAAIQ,EAA+B,EAA/BA,MAAO8C,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KAC9BJ,EAAW,EACXK,EAAWhD,EAAMiD,SAGjBN,EADc,QAAdtC,EACY6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAC7B,cAAd+B,EACM6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAAc,IAEtD,EAEfqE,EAAWO,KAAKC,MAAMR,GAEtB,IAAIU,EAAaL,EAEjB,GADA2C,EAAc9C,GAAOF,SAAWA,GACP,IAApBG,EAAIQ,YACL,OACI,+BACI,uBACInD,UAAU,KACVoD,KAAK,WACLC,iBAAkBvB,EAAaY,GAC/B7D,SAAU,WAAO,IAAD,EACZkD,EAAgB,2BACTD,GADQ,kBAEVzC,GAAMyC,EAAazC,MAExB,IAAIiE,EAAM,iBAAGwC,QAAH,IAAGA,OAAH,EAAGA,EAA4BK,qBAA/B,QAAgD,GACrDrE,EAAazC,IAOdiE,EAASA,EAAOE,QAAO,SAAAC,GAAI,OAAEA,GAAQP,KACrC6C,EAA8B,2BACvBD,GADsB,IAEzBK,cAAe7C,OATnBA,EAAOI,KAAKR,GACZ6C,EAA8B,2BACvBD,GADsB,IAEzBK,cAAe7C,SAY/B,kCACI,mBAAGK,KAAMf,EAAT,SAAgBC,IADpB,IACkC,qCAAQL,EAAR,eA5B7BnD,cC6ClC,IACQ+G,EA3Hf,WACI,IAAM/H,EAAUC,qBAAWR,GACpBG,EAKHI,EALGJ,WAAYE,EAKfE,EALeF,WAAY+B,EAK3B7B,EAL2B6B,UAC3BmG,EAIAhI,EAJAgI,aAAcC,EAIdjI,EAJciI,gBACdC,EAGAlI,EAHAkI,qBAAsBC,EAGtBnI,EAHsBmI,wBACKC,GAE3BpI,EAFAqI,0BAEArI,EAF2BoI,8BAC3BE,EACAtI,EADAsI,0BAA2BC,EAC3BvI,EAD2BuI,6BAE/B,EAAgD/F,mBAAS,GAAzD,mBAAOgG,EAAP,KAAyBC,EAAzB,KAGA9F,qBAAU,WAENC,IAAMC,IAAI,yLACTC,MAAK,SAAAC,GACFkF,EAAgBlF,EAAIC,SAEvBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAGhBN,IAAMC,IAAI,wEACTC,MAAK,SAAAC,GACF0F,EAAoB1F,EAAIC,KAAKK,kBAElC,IAEH,MAAwCb,mBACpC,IAAIc,MAAM0E,EAAazE,QAAQC,MAAK,IADxC,mBAAOC,EAAP,KAAqBC,EAArB,KAqBA,OAhBAf,qBAAU,WACN,IAAM+F,EAAyB9E,OAAOC,QAAQJ,GAAcK,QACxD,SAACC,EAAD,4BAAeC,EAAf,iBAEMD,GAAW,UACbiE,EAAa/D,MACT,SAACC,GAAD,OAAgBA,EAAWlD,GAAK,KAAOgD,YAF9B,aACb,EAEKG,UACHJ,IACN,GAEJoE,EAAwBO,GACxBN,EAA8BM,EAAwB5I,KACvD,CAAC2D,EAAc3D,EAAY+B,KAGX,IAAdA,GAAkC,KAAf/B,GAAkC,iBAAb+B,IAErC,mCACA,sBAAKF,UAAU,0BAA0BX,GAAG,YAA5C,UACI,cAAC,EAAD,CACIQ,MAAM,0BACNC,MAAO,IAAOyG,IAElB,mBAAGvG,UAAU,8BAAb,SACO6G,IAEP,oBAAI7G,UAAU,aAAd,SACKqG,EAAa5D,KAAI,WAA4BC,GAAW,IAApCrD,EAAmC,EAAnCA,GAAIQ,EAA+B,EAA/BA,MAAO8C,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KAC7BJ,EAAW,EACXK,EAAWhD,EAAMiD,SAGjBN,EADc,QAAdtC,EACY6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAC7B,cAAd+B,EACM6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAAc,IAEtD,EAEfqE,EAAWO,KAAKC,MAAMR,GAEtB,IAAIU,EAAaL,EAGjB,GADAwD,EAAa3D,GAAOF,SAAWA,GACN,IAApBG,EAAIQ,YACL,OACI,+BACI,uBACInD,UAAU,KACVoD,KAAK,WACLC,iBAAkBvB,EAAaY,GAC/B7D,SAAU,WAAO,IAAD,EACZkD,EAAgB,2BACTD,GADQ,kBAEVzC,GAAMyC,EAAazC,MAExB,IAAIiE,EAAM,iBAAGqD,QAAH,IAAGA,OAAH,EAAGA,EAA2BK,oBAA9B,QAA8C,GAClDlF,EAAazC,IAQfiE,EAASA,EAAOE,QAAO,SAAAC,GAAI,OAAEA,GAAQP,KACrC0D,EAA6B,2BACtBD,GADqB,IAExBK,aAAc1D,OATlBA,EAAOI,KAAKR,GACZ0D,EAA6B,2BACtBD,GADqB,IAExBK,aAAc1D,SAY9B,kCACI,mBAAGK,KAAMf,EAAT,SAAgBC,IADpB,IACkC,qCAAQE,KAAKC,MAAMR,GAAnB,eA7B7BnD,cCiDlC,IACQ4H,EAhIf,WACI,IAAM5I,EAAUC,qBAAWR,GAEvBG,EAKAI,EALAJ,WAAYE,EAKZE,EALYF,WAAY+B,EAKxB7B,EALwB6B,UAAWC,EAKnC9B,EALmC8B,eACnC+G,EAIA7I,EAJA6I,YAAaC,EAIb9I,EAJa8I,eACbC,EAGA/I,EAHA+I,kBAAmBC,EAGnBhJ,EAHmBgJ,qBACKC,GAExBjJ,EAFAkJ,uBAEAlJ,EAFwBiJ,2BACxBE,EACAnJ,EADAmJ,uBAAwBC,EACxBpJ,EADwBoJ,0BAE5B,EAA0C5G,mBAAS,IAAnD,mBAAO6G,EAAP,KAAsBC,EAAtB,KAGA3G,qBAAU,WAENC,IAAMC,IAAI,yLACTC,MAAK,SAAAC,GACF+F,EAAe/F,EAAIC,SAEtBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAIhBN,IAAMC,IAAI,wEACTC,MAAK,SAAAC,GACFuG,EAAiBvG,EAAIC,KAAKK,kBAG/B,IAEH,MAAwCb,mBACpC,IAAIc,MAAMuF,EAAYtF,QAAQC,MAAK,IADvC,mBAAOC,EAAP,KAAqBC,EAArB,KAsBA,OAhBAf,qBAAU,WACN,IAAM4G,EAAsB3F,OAAOC,QAAQJ,GAAcK,QACrD,SAACC,EAAD,4BAAeC,EAAf,iBAEMD,GAAW,UACb8E,EAAY5E,MACR,SAACC,GAAD,OAAgBA,EAAWlD,GAAK,KAAOgD,YAF9B,aACb,EAEKG,UACHJ,IACN,GAEJiF,EAAqBO,GACrBN,EAA2BM,EAAqBzJ,KACjD,CAAC2D,EAAc3D,EAAY+B,IAGX,IAAdA,GAAkC,KAAf/B,GAAwC,kBAAnBgC,GAErC,mCACA,sBAAKH,UAAU,0BAA0BX,GAAG,OAA5C,UACI,cAAC,EAAD,CACIQ,MAAM,kBACNC,MAAO,IAAOsH,IAElB,mBAAGpH,UAAU,8BAAb,SACM0H,IAEN,oBAAI1H,UAAU,aAAd,SACCkH,EAAYzE,KAAI,WAA4BC,GAAW,IAApCrD,EAAmC,EAAnCA,GAAIQ,EAA+B,EAA/BA,MAAO8C,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KACxBJ,EAAW,EACXK,EAAWhD,EAAMiD,SAGjBN,EADc,QAAdtC,EACY6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAC7B,cAAd+B,EACM6C,KAAKC,MAAML,EAAIM,OAAShF,EAAcE,EAAc,IAEtD,EAEfqE,EAAWO,KAAKC,MAAMR,GAEtB,IAAIU,EAAaL,EAEjB,GADAqE,EAAYxE,GAAOF,SAAWA,GACL,IAApBG,EAAIQ,YAEL,OACI,+BACI,uBACInD,UAAU,KACVoD,KAAK,WACLC,iBAAkBvB,EAAaY,GAC/B7D,SAAU,WAAO,IAAD,EACZkD,EAAgB,2BACTD,GADQ,kBAEVzC,GAAMyC,EAAazC,MAGxB,IAAIiE,EAAM,iBAAGkE,QAAH,IAAGA,OAAH,EAAGA,EAAwBK,iBAA3B,QAAwC,GAC7C/F,EAAazC,IAQdiE,EAASA,EAAOE,QAAO,SAAAC,GAAI,OAAEA,GAAQP,KACrCuE,EAA0B,2BACnBD,GADkB,IAErBK,UAAWvE,OAVfA,EAAOI,KAAKR,GACZuE,EAA0B,2BACnBD,GADkB,IAErBK,UAAWvE,SAa3B,kCACI,mBAAGK,KAAMf,EAAT,SAAgBC,IADpB,IACkC,qCAAQL,EAAR,eA9B7BnD,cChE1ByI,MAtBf,WAEI,IAAMzJ,EAAUC,qBAAWR,GACIoC,GAAwB7B,EAAhDJ,WAAgDI,EAApCF,WAAoCE,EAAxB6B,WAAWG,EAAahC,EAAbgC,UAE1C,OADAmB,QAAQC,IAAIpB,EAAYH,GAEpB,mCACI,sBAAKF,UAAU,0BAA0BX,GAAG,SAA5C,UACI,qBAAKW,UAAU,yBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,oBAAIA,UAAU,gBAAd,kCAGR,oBAAGA,UAAU,8BAAb,0RAEI,mBAAG2D,KAAK,2CAA2C3D,UAAU,cAA7D,kCCJL+H,MAXf,WAEI,OACI,mCACI,qBAAK/H,UAAU,yBAAf,SACI,+DAAiC,uBAAjC,yC,+BCqKDgI,MA7Jf,WACI,IAAM3J,EAAUC,qBAAWR,GAEvBuC,EAiBAhC,EAjBAgC,UACAlC,EAgBAE,EAhBAF,WACA+B,EAeA7B,EAfA6B,UACAC,EAcA9B,EAdA8B,eACA0E,EAaAxG,EAbAwG,sBAAuBG,EAavB3G,EAbuB2G,2BACvBzE,EAYAlC,EAZAkC,0BAA2BG,EAY3BrC,EAZ2BqC,+BAC3BqD,EAWA1F,EAXA0F,iBAAkBG,EAWlB7F,EAXkB6F,sBAClBqC,EAUAlI,EAVAkI,qBAAsBG,EAUtBrI,EAVsBqI,0BACtBhB,EASArH,EATAqH,sBAAuBG,EASvBxH,EATuBwH,2BACvBuB,EAQA/I,EARA+I,kBAAmBG,EAQnBlJ,EARmBkJ,uBACnBU,EAOA5J,EAPA4J,gBAAiBC,EAOjB7J,EAPiB6J,mBACjBjD,EAMA5G,EANA4G,2BACAa,EAKAzH,EALAyH,2BACA3B,EAIA9F,EAJA8F,sBACAwC,EAGAtI,EAHAsI,0BACAhG,EAEAtC,EAFAsC,+BACA6G,EACAnJ,EADAmJ,uBAGEW,EAAkBlD,EAA0B,cAC9CmD,EAAmBD,EAAkBA,EAAgBE,KAAK,MAAQ,MACtC,KAAb,OAAfF,QAAe,IAAfA,OAAA,EAAAA,EAAiBvG,SAAgBuG,EAAgBzE,KAAK,OAE1D,IAAM4E,EAAuB3B,EAAyB,aAClD4B,EAAwBD,EAAuBA,EAAqBD,KAAK,MAAQ,MAChD,KAAb,OAApBC,QAAoB,IAApBA,OAAA,EAAAA,EAAsB1G,SAAgB0G,EAAqB5E,KAAK,OAGpE,IAAM8E,EAAmBrE,EAAqB,SAC1CsE,EAAoBD,EAAmBA,EAAiBH,KAAK,MAAQ,MACxC,KAAb,OAAhBG,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB5G,SAAgB4G,EAAiB9E,KAAK,OAE5D,IAAMgF,EAAgB5C,EAA0B,cAC5C6C,EAAiBD,EAAgBA,EAAcL,KAAK,MAAQ,MAClC,KAAb,OAAbK,QAAa,IAAbA,OAAA,EAAAA,EAAe9G,SAAgB8G,EAAchF,KAAK,OAEtD,IAAMkF,EAAiBjI,EAA8B,kBACjDkI,EAAkBD,EAAiBA,EAAeP,KAAK,MAAQ,MACpC,KAAb,OAAdO,QAAc,IAAdA,OAAA,EAAAA,EAAgBhH,SAAgBgH,EAAelF,KAAK,OAExD,IAAMoF,EAAoBtB,EAAsB,UAC5CuB,EAAqBD,EAAoBA,EAAkBT,KAAK,MAAQ,MAC1C,KAAb,OAAjBS,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBlH,SAAgBkH,EAAkBpF,KAAK,OAE7D,MAAoC7C,mBAAS,GAA7C,mBAAOmI,EAAP,KAAmBC,EAAnB,KAgCD,OA7BAjI,qBAAU,WAEN,IAAIkI,EAAY,CACZ3I,EACAwD,EACAc,EACA0B,EACAb,EACA0B,GAEJ5F,QAAQC,IAAI,iBAAkB2G,GAC9B5G,QAAQC,IAAI,iBAAkBkF,EAAyB,cACvDnF,QAAQC,IAAI,YAAagH,GACzBjH,QAAQC,IAAI,SAAUkH,GACtBnH,QAAQC,IAAI,WAAYoH,GACxBrH,QAAQC,IAAI,QAASsH,GAIrB,IAGMI,EAHeD,EAAU1F,QAAO,SAAS4F,GAC3C,YAAaC,IAAND,KAEgBjH,QAAO,SAACmH,EAAOC,GAAR,OAAkBD,EAAOC,KAC3DN,EAAcE,GAEdjB,EAAmBlD,EAA6BtE,EAAiCwD,EAAwBwC,EAA4Bb,EAA6B0B,KACnK,CAACrH,EAAW/B,EAAY6G,EAA4BtE,EAAgCwD,EAAsBwC,EAA0Bb,EAA2B0B,IAM9J,8BACI,eAAC,IAAD,CAAWvH,UAtFJ,mBAsFP,UACI,2DACA,gCACI,+BACI,6BAAI,eAAC,OAAD,CAAMwJ,YAAa,SAAUC,GAAG,UAAUC,KAAK,EAAMC,QAAS,GAAIC,QAAQ,EAAMC,SAAU,IAA1F,sCAAwH,+BACzG,gBAAdxJ,EAA4B,cAAC,IAAD,CAAcpB,MAAQ8D,KAAKC,MAAOgC,GAA8B8E,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAAU,YACjK,6BAAI,eAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,YAAYC,KAAK,EAAMC,QAAS,GAAIC,QAAQ,EAAMC,SAAU,IAA1F,oCAAsH,+BACvG,gBAAdxJ,EAA4B,cAAC,IAAD,CAAcpB,MAAQ8D,KAAKC,MAAO0D,GAA6BoD,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAAU,YAChK,6BAAI,eAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,WAAWC,KAAK,EAAMC,QAAS,GAAIC,QAAQ,EAAMC,SAAU,IAAzF,uCAAwH,+BACzG,gBAAdxJ,EAA4B,cAAC,IAAD,CAAcpB,MAAQ8D,KAAKC,MAAOkB,GAAyB4F,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAAU,YAE5J,6BAAI,eAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,WAAWC,KAAK,EAAMC,QAAS,GAAGC,QAAQ,EAAMC,SAAU,IAAxF,qCAAqH,+BACtG,gBAAdxJ,EAA4B,cAAC,IAAD,CAAcpB,MAAQ8D,KAAKC,MAAO6C,GAA8BiE,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAAU,YACjK,+BAAI,eAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,SAASC,KAAK,EAAMC,QAAS,GAAIC,QAAQ,EAAMC,SAAU,IAAvF,0CAAyH,+BAC1G,gBAAdxJ,EAA4B,cAAC,IAAD,CAAcpB,MAAQ8D,KAAKC,MAAOtC,GAAkCoJ,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAAU,UADrK,OAEA,6BAAI,eAAC,OAAD,CAAMR,YAAY,SAASC,GAAG,OAAOC,KAAK,EAAMC,QAAS,GAAIC,QAAQ,EAAMC,SAAU,IAArF,0BAAuG,+BACxF,gBAAdxJ,EAA4B,cAAC,IAAD,CAAcpB,MAAQ8D,KAAKC,MAAOuE,GAAyBuC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAAU,YAC5J,6BAAI,4CAAc,+BACH,gBAAd3J,EAA4B,cAAC,IAAD,CAAcpB,MAAQ8D,KAAKC,MAAOiF,GAAoB6B,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAAU,eAExI,gBAAd3J,EAED,sBAAKL,UAAU,aAAf,UAEI,gCACI,+BAAOgJ,IACP,0DAEJ,8BACI,mBAAGrF,KAEK,wEACsBtD,EACtB,SAAsBH,EACtB,UAAsBC,EAEtB,YAAsB6E,EACtB,eAAsBoD,EAEtB,YAAsB1B,EACtB,eAAsB6B,EAEtB,aAAsBrE,EACtB,gBAAsBuE,EAEtB,aAAsB5C,EACtB,gBAAsB8C,EAEtB,WAAsBjI,EACtB,cAAsBmI,EAEtB,aAAsBtB,EACtB,gBAAsBwB,EAEtB,UAAsBC,EACtB,eAAsBf,EAG1BjI,UAAU,kBAAkBhB,OAAO,UA7BvC,iCAiCN,KAGF,oBAAGgB,UAAU,cAAb,UAA2B,4DAA3B,4FACA,mBAAGA,UAAU,cAAb,8NACA,mBAAGA,UAAU,cAAb,8eClBLiK,MA9Hf,WACoB3L,qBAAWR,GAA3B,IAEA,EAAwD+C,mBAAS,GAAjE,mBAAOR,EAAP,KAAwCtB,EAAxC,KACA,EAAwD8B,mBAAS,GAAjE,mBAAOX,EAAP,KAAwCV,EAAxC,KACA,EAA6DqB,mBAAS,GAAtE,mBAAOV,EAAP,KAAwCR,EAAxC,KAEA,EAAyDkB,mBAAS,IAAlE,mBAAO5C,EAAP,KAAwCiB,EAAxC,KACA,EAAwD2B,mBAAS,IAAjE,mBAAO3C,EAAP,KAAwCiB,EAAxC,KACA,EAAyD0B,mBAAS,IAAlE,mBAAO1C,EAAP,KAAwCiB,EAAxC,KAEA,EAAoEyB,mBAAS,IAA7E,mBAAOgE,EAAP,KAAwCC,EAAxC,KACA,EAAwEjE,mBAAS,IAAjF,mBAAON,EAAP,KAAwCC,EAAxC,KACA,EAA+DK,mBAAS,IAAxE,mBAAOkD,GAAP,KAAwCC,GAAxC,KACA,GAAmEnD,mBAAS,IAA5E,qBAAO0F,GAAP,MAAwCC,GAAxC,MACA,GAAoE3F,mBAAS,IAA7E,qBAAO6E,GAAP,MAAwCC,GAAxC,MACA,GAAgE9E,mBAAS,IAAzE,qBAAOuG,GAAP,MAAwCC,GAAxC,MAGA,GAAyExG,mBAAS,GAAlF,qBAAOmE,GAAP,MAAwCD,GAAxC,MACA,GAA6ElE,mBAAS,GAAtF,qBAAOH,GAAP,MAAwCD,GAAxC,MACA,GAAoEI,mBAAS,GAA7E,qBAAOqD,GAAP,MAAwCD,GAAxC,MACA,GAAwEpD,mBAAS,GAAjF,qBAAO6F,GAAP,MAAwCD,GAAxC,MACA,GAAyE5F,mBAAS,GAAlF,qBAAOgF,GAAP,MAAwCD,GAAxC,MACA,GAAqE/E,mBAAS,GAA9E,qBAAO0G,GAAP,MAAwCD,GAAxC,MAEA,GAA8DzG,mBAAS,GAAvE,qBAAOoH,GAAP,MAAwCC,GAAxC,MAGA,GAA4DrH,mBAAS,IAArE,qBAAO8D,GAAP,MAAwCC,GAAxC,MACA,GAAuD/D,mBAAS,IAAhE,qBAAOgD,GAAP,MAAwCC,GAAxC,MACA,GAAgEjD,mBAAS,IAAzE,qBAAOT,GAAP,MAAwCE,GAAxC,MACA,GAA0DO,mBAAS,IAAnE,qBAAOqG,GAAP,MAAwCC,GAAxC,MACA,GAA4DtG,mBAAS,IAArE,qBAAO2E,GAAP,MAAwCC,GAAxC,MACA,GAA2D5E,mBAAS,IAApE,qBAAOwF,GAAP,MAAwCC,GAAxC,MAEA,GAAyEzF,mBAAS,GAAlF,qBAAOoE,GAAP,MAAwCC,GAAxC,MACA,GAA6ErE,mBAAS,GAAtF,qBAAOF,GAAP,MAAwCC,GAAxC,MACA,GAAoEC,mBAAS,GAA7E,qBAAOsD,GAAP,MAAwCC,GAAxC,MACA,GAAwEvD,mBAAS,GAAjF,qBAAO8F,GAAP,MAAwCC,GAAxC,MACA,GAAyE/F,mBAAS,GAAlF,qBAAOiF,GAAP,MAAwCC,GAAxC,MACA,GAAqElF,mBAAS,GAA9E,qBAGMqJ,GAAe,CACjB7J,YAAgCtB,eAChCmB,YAAgCV,eAChCW,iBAAgCR,oBAChC1B,aAAgCiB,gBAChChB,YAAgCiB,eAChChB,aAAgCiB,gBAEhCuF,iBAAgCC,oBAChCf,YAAgCC,eAChC1D,qBAAgCE,wBAChC4G,eAAgCC,kBAChC3B,iBAAgCC,oBAChCY,gBAAgCC,mBAEhCzB,wBAAgCC,2BAChCvE,4BAAgCC,+BAChCuD,oBAAgCC,uBAChCuC,wBAAgCC,2BAChCd,yBAAgCC,4BAChCyB,qBAAgCC,wBAEhCrC,8BAAgCD,iCAChCrE,kCAAgCD,qCAChCyD,yBAAgCD,4BAChCyC,6BAAgCD,gCAChCZ,8BAAgCD,iCAChC2B,0BAAgCD,6BAEhCW,mBAAgCC,sBAEhCjD,8BAAgCC,iCAChCvE,kCAAgCC,qCAChCuD,yBAAgCC,4BAChCuC,6BAAgCC,gCAChCd,8BAAgCC,iCAChCyB,uBAvCJ,MAuCoCC,0BAvCpC,OA0CA,OAEI,cAAC3J,EAAWqM,SAAZ,CAAqBlL,MAAOiL,GAA5B,SACI,qBAAKlK,UAAU,MAAf,SACI,eAACrC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKoC,UAAU,aAAf,UACI,cAACnC,EAAA,EAAD,CAAKmC,UAAU,gBAAgBoK,GAAG,KAAKC,GAAG,IAA1C,SACI,cAACC,EAAD,MAEJ,cAACzM,EAAA,EAAD,CAAKmC,UAAU,aAAaoK,GAAG,KAAKC,GAAG,IAAvC,SACI,cAACE,EAAD,MAEJ,cAAC1M,EAAA,EAAD,CAAKmC,UAAU,eAAeoK,GAAG,KAAKC,GAAG,IAAzC,SACI,cAACG,EAAD,MAEJ,cAAC3M,EAAA,EAAD,CAAKmC,UAAU,eAAeoK,GAAG,KAAKC,GAAG,IAAzC,SACI,cAACI,EAAD,SAGR,qBAAKzK,UAAU,kBAAf,SACI,uRAEJ,eAACpC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKuM,GAAG,KAAKC,GAAG,IAAhB,UACmB,IAAdhK,GAAiC,IAAdH,GAAsC,IAAnBC,EAAuB,cAACuK,EAAD,IAAyB,KACvF,cAACpF,EAAD,IACA,cAACqF,EAAD,IACA,cAACC,EAAD,IACA,cAACzE,EAAD,IACA,cAAC,EAAD,IACA,cAAC0E,EAAD,IACe,gBAAdxK,GAA6C,IAAdH,EAAkB,cAAC4K,EAAD,IAAqB,QAE3E,cAACjN,EAAA,EAAD,CAAKmC,UAAU,UAAUoK,GAAG,KAAKC,GAAG,IAApC,SACI,cAAC,EAAD,iBChIbU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9J,MAAK,YAAkD,IAA/C+J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACQ,cAAC,EAAD,MAERC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.aa8f2122.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container} from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Group Information & Estimate</h3>\r\n                    <p>Price updated automatically as information and activities are selected</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Header;","import React from 'react';\r\nexport const AppContext = React.createContext({});","import React, {useContext} from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, Form } from 'react-bootstrap';\r\nimport { AppContext } from '../AppContext';\r\n\r\nlet constHours = \"\";\r\nlet constSize = \"\";\r\nlet medianSize = \"\";\r\n\r\nconst RetreatSizeApp = () => {\r\n    const context = useContext(AppContext);\r\n    const onSizeChange = (e) => {\r\n        //this.setState({ ...this.state, size: e.target.value });\r\n        context.setGroupSize(e.target.value)\r\n        constSize = e.target.value; \r\n        switch (constSize) {\r\n          case '20-39 Persons':\r\n            constHours = 2;\r\n            medianSize = 30;\r\n            break;\r\n          case '40-59 Persons': \r\n            constHours = 3;\r\n            medianSize = 50;\r\n            break;\r\n          case '60-79 Persons':\r\n            constHours = 4;\r\n            medianSize = 70;\r\n            break;\r\n          case '80+ Persons':\r\n            constHours = 5;\r\n            medianSize = 80;  \r\n            break;\r\n          default: \r\n        } \r\n        context.setConstHours(constHours);\r\n        context.setConstSize(constSize);\r\n        context.setMedianSize(medianSize);\r\n    }\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"retreat-size\">\r\n                                    <Form.Label>Enter Group Size</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={onSizeChange}>\r\n                                        <option id=\"size\">Select Group Size</option>\r\n                                        <option id=\"20-39\">20-39 Persons</option>\r\n                                        <option id=\"40-59\">40-59 Persons</option>\r\n                                        <option id=\"60-9\">60-79 Persons</option>\r\n                                        <option id=\"80+\">80+ Persons</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n}\r\n\r\nexport default RetreatSizeApp;","import React, {useContext} from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, Form } from 'react-bootstrap';\r\nimport { AppContext } from '../AppContext';\r\n\r\n\r\nvar constType = \"\";\r\nexport var isOvernight = false; \r\n\r\n\r\nconst RetreatTypeApp = () => {\r\n    const context = useContext(AppContext);\r\n    const onTypeChange = (e) => {\r\n        context.setGroupType(e.target.value)\r\n        constType = e.target.value; \r\n        switch (constType) {\r\n          case 'Day Group':\r\n            isOvernight = false; \r\n            break;\r\n          case 'Overnight Group': \r\n            isOvernight = true; \r\n            break; \r\n          default: \r\n            //console.log(\"the type isn't working\");\r\n        }\r\n       context.setGroupType(constType);\r\n    } \r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"retreat-type\">\r\n                                <Form.Label>Select Event Type</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={onTypeChange}>\r\n                                    <option id=\"type\" value=\"none\">Select Event Type</option>\r\n                                    <option defaultValue id=\"day\" value=\"day\">Day Group</option>\r\n                                    <option id=\"overnight\" value=\"overnight\">Overnight Group</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RetreatTypeApp;","import React, {useContext} from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, Form } from 'react-bootstrap';\r\nimport { AppContext } from '../AppContext';\r\n\r\n\r\nvar constType = \"\";\r\nexport var isOvernight = false; \r\n\r\n\r\nconst RetreatEventTypeApp = () => {\r\n    const context = useContext(AppContext);\r\n    const onEventTypeChange = (e) => {\r\n        context.setGroupEventType(e.target.value)\r\n        constType = e.target.value; \r\n        \r\n       context.setGroupEventType(constType);\r\n    } \r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"event-type\">\r\n                                <Form.Label>Select Group Type</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={onEventTypeChange}>\r\n                                    <option id=\"type\" value=\"none\">Select Group Type</option>\r\n                                    <option value=\"Team Building\">Team Building</option>\r\n                                    <option value=\"School Field Trip\">School Field Trip</option>\r\n                                    <option value=\"Family/Friends Outing\">Family/Friends Outing</option>\r\n                                    <option value=\"Other\">Other</option>    \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form> \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RetreatEventTypeApp;\r\n","import React from 'react';\r\n\r\nconst ActivityHeader = ({ title, total, desc}) => {\r\n    \r\n    return (\r\n        <div className=\"single-activity-header\">\r\n            <div className=\"activity-name\">\r\n                <h3 className=\"heading-style\"> {title}</h3>\r\n            </div>\r\n            <div className=\"activity-per-person\">\r\n                <div>\r\n                    <p>Average Price Per Person:</p>\r\n                    <span>{total}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ActivityHeader;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction GeneralRecreationApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, groupEventType, groupSize,\r\n        generalRecreation, setGeneralRecreation,\r\n        generalRecreationtotalSum, setGeneralRecreationtotalSum, \r\n        generalRecreationtotalGroupSum, setGeneralRecreationtotalGroupSum ,\r\n        selectedGeneralRecreationItems, setSelectedGeneralRecreationItems,\r\n    } = context;\r\n    const [generalRecreationDesc, setGeneralRecreationDesc] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=10&activity_group_size=704&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setGeneralRecreation(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n\r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/704')\r\n        .then(res => {\r\n            setGeneralRecreationDesc(res.data.description);\r\n        });\r\n    }, [])\r\n    \r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(generalRecreation.length).fill(false)\r\n    );\r\n    \r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        const _generalRecreationtotalSum =  Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                generalRecreation.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n        )\r\n        setGeneralRecreationtotalSum(_generalRecreationtotalSum)\r\n        setGeneralRecreationtotalGroupSum((_generalRecreationtotalSum * medianSize)) \r\n    }, [checkedState, medianSize, groupType])\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 && groupEventType !== 'Team Building'  ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"genRec\">\r\n                <ActivityHeader\r\n                    title=\"General Recreation Activities\"\r\n                    total={'$' +  generalRecreationtotalSum } \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  generalRecreationDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {generalRecreation.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n\r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else if ( groupType === \"overnight\") {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        } else {\r\n                            newPrice = 0;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        generalRecreation[index].newPrice = newPrice;\r\n\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedGeneralRecreationItems?.GeneralRecreation ?? [];\r\n                                            if (!checkedState[id]  ){    \r\n                                                _items.push(adminTitle)\r\n                                                setSelectedGeneralRecreationItems({\r\n                                                    ...selectedGeneralRecreationItems,\r\n                                                    GeneralRecreation: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item !== adminTitle);\r\n                                                setSelectedGeneralRecreationItems({\r\n                                                    ...selectedGeneralRecreationItems,\r\n                                                    GeneralRecreation: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport const GeneralRecreationtotalSum = () => {}\r\nexport default GeneralRecreationApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction WildlifeCenterApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, groupEventType,\r\n        wildLife, setWildLife,\r\n        wildLifetotalSum, setWildLifetotalSum, \r\n        wildLifetotalGroupSum, setWildLifetotalGroupSum,\r\n        selectedWildLifeItems, setSelectedWildLifeItems,\r\n    } = context;\r\n    const [wildLifeDesc, setWildLifeDesc] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=10&activity_group_size=702&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setWildLife(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n\r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/702')\r\n        .then(res => {\r\n            setWildLifeDesc(res.data.description);\r\n        });\r\n    }, [])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(wildLife.length).fill(false)\r\n    );\r\n\r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        const _wildLifetotalSum =  Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                wildLife.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n        )\r\n        setWildLifetotalSum(_wildLifetotalSum)\r\n        setWildLifetotalGroupSum((_wildLifetotalSum * medianSize)) \r\n    }, [checkedState, medianSize, groupType])\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 && groupEventType !== 'Team Building' ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"wildlife\">\r\n                <ActivityHeader\r\n                    title=\"Wildlife Activities\" \r\n                    total={'$' +  wildLifetotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    { wildLifeDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {wildLife.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                        \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else if ( groupType === \"overnight\") {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        } else {\r\n                            newPrice = 0;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle.replace('&#038;', '&');\r\n                        wildLife[index].newPrice = newPrice;\r\n\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedWildLifeItems?.WildLife ?? [];\r\n                                            if (!checkedState[id]  ){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedWildLifeItems({\r\n                                                    ...selectedWildLifeItems,\r\n                                                    WildLife: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedWildLifeItems({\r\n                                                    ...selectedWildLifeItems,\r\n                                                    WildLife: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle.replace('&#038;', '&')}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                        {/* <p>{desc}</p> */}\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nexport const wildLifetotalSum = () => {}\r\nexport default WildlifeCenterApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport ActivityHeader from './ActivityHeader';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction HighAdventureApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, \r\n        highAdventure, setHighAdventure, \r\n        highAdventuretotalSum, setHighAdventuretotalSum, \r\n        highAdventuretotalGroupSum, setHighAdventuretotalGroupSum,\r\n        selectedHighAdventureItems, setSelectedHighAdventureItems, \r\n    } = context;    \r\n    const [highAdventureDesc, setHighAdventureDesc] = useState('Loading Description');\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=10&activity_group_size=700&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setHighAdventure(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/700')\r\n        .then(res => {\r\n            setHighAdventureDesc(res.data.description);\r\n        });\r\n\r\n    }, [])\r\n    \r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(highAdventure.length).fill(false)\r\n    );\r\n    \r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        const _highAdventuretotalSum =  Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                highAdventure.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n        )\r\n        setHighAdventuretotalSum(_highAdventuretotalSum)\r\n        setHighAdventuretotalGroupSum((_highAdventuretotalSum * medianSize)) \r\n\r\n        console.log(selectedHighAdventureItems);\r\n    }, [checkedState, medianSize, groupType])\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"highAdv\">\r\n                <ActivityHeader\r\n                    title=\"High Adventure Activities\"\r\n                    total={'$' +  highAdventuretotalSum } \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  highAdventureDesc  }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {highAdventure.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n\r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        } else if ( groupType === \"overnight\") {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        } else {\r\n                            newPrice = 0;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        highAdventure[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedHighAdventureItems?.HighAdventure ?? [];\r\n                                            if (!checkedState[id]){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedHighAdventureItems({\r\n                                                    ...selectedHighAdventureItems,\r\n                                                    HighAdventure: _items\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                _items = _items.filter(item=>item !== adminTitle);\r\n                                                setSelectedHighAdventureItems({\r\n                                                    ...selectedHighAdventureItems,\r\n                                                    HighAdventure: _items\r\n                                                })\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const highAdventuretotalSum = () => {}\r\nexport default HighAdventureApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction HorseProgramsApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, groupEventType, \r\n        horsePrograms, setHorsePrograms, \r\n        horseProgramstotalSum, setHorseProgramstotalSum, \r\n        horseProgramstotalGroupSum, setHorseProgramstotalGroupSum,\r\n        selectedHorseProgramsItems, setSelectedHorseProgramsItems,\r\n    } = context;\r\n    const [horseProgDesc, setHorseProgDesc] = useState(\"\");\r\n \r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=10&activity_group_size=703&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setHorsePrograms(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/703')\r\n        .then(res => {\r\n            setHorseProgDesc(res.data.description);\r\n        });\r\n    }, [])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(horsePrograms.length).fill(false)\r\n    );\r\n    \r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        const _horseProgramstotalSum =  Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                horsePrograms.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n        )\r\n        setHorseProgramstotalSum(_horseProgramstotalSum)\r\n        setHorseProgramstotalGroupSum((_horseProgramstotalSum * medianSize)) \r\n    }, [checkedState, medianSize, groupType])\r\n\r\n    \r\n    if ( groupType !== 0 && medianSize !== 80 && groupEventType !== 'Team Building') {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"horsePro\">\r\n                <ActivityHeader\r\n                    title=\"Horse Program Activities\"\r\n                    total={'$' +  horseProgramstotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  horseProgDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {horsePrograms.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                        \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else if ( groupType === \"overnight\") {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        } else {\r\n                            newPrice = 0;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        horsePrograms[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n                                            let _items = selectedHorseProgramsItems?.HorsePrograms ?? [];\r\n                                            if (!checkedState[id]  ){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedHorseProgramsItems({\r\n                                                    ...selectedHorseProgramsItems,\r\n                                                    HorsePrograms: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedHorseProgramsItems({\r\n                                                    ...selectedHorseProgramsItems,\r\n                                                    HorsePrograms: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${newPrice}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const horseProgramsTotalSum = () => {}\r\nexport default HorseProgramsApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction TeambuildingApp() {\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, \r\n        teamBuilding, setTeamBuilding,\r\n        teamBuildingtotalSum, setTeamBuildingtotalSum, \r\n        teamBuildingtotalGroupSum, setTeamBuildingtotalGroupSum, \r\n        selectedTeamBuildingItems, setSelectedTeamBuildingItems,\r\n    } = context;\r\n    const [teamBuildingDesc, setTeamBuildingDesc] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=10&activity_group_size=701&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setTeamBuilding(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n        //Call to get the category description\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/701')\r\n        .then(res => {\r\n            setTeamBuildingDesc(res.data.description);\r\n        });\r\n    }, [])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(teamBuilding.length).fill(false)\r\n    );\r\n\r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        const _teamBuildingtotalSum =  Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                teamBuilding.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n        )\r\n        setTeamBuildingtotalSum(_teamBuildingtotalSum)\r\n        setTeamBuildingtotalGroupSum((_teamBuildingtotalSum * medianSize)) \r\n    }, [checkedState, medianSize, groupType])\r\n\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 || groupType == 'Team Building' ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"teamBuild\">\r\n                <ActivityHeader\r\n                    title=\"Teambuilding Activities\"\r\n                    total={'$' +  teamBuildingtotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    {  teamBuildingDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                    {teamBuilding.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                        \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else if ( groupType === \"overnight\") {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        } else {\r\n                            newPrice = 0;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        \r\n                        teamBuilding[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n                                            let _items = selectedTeamBuildingItems?.TeamBuilding ?? [];\r\n                                            if ( !checkedState[id] ){\r\n                                               \r\n                                                _items.push(adminTitle)\r\n                                                setSelectedTeamBuildingItems({\r\n                                                    ...selectedTeamBuildingItems,\r\n                                                    TeamBuilding: _items\r\n                                                })\r\n                                            } else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedTeamBuildingItems({\r\n                                                    ...selectedTeamBuildingItems,\r\n                                                    TeamBuilding: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${Math.round(newPrice)}/PER</span>\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const teamBuildingtotalSum = () => {}\r\nexport default TeambuildingApp;","import React, { useEffect, useMemo, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\nimport { isOvernight } from '../RetreatSelection/RetreatType';\r\nimport ActivityHeader from './ActivityHeader';\r\n\r\n\r\nfunction PoolPartiesApp() {\r\n    const context = useContext(AppContext);\r\n    const {\r\n        constHours, medianSize, groupType, groupEventType,\r\n        poolParties, setPoolParties,\r\n        poolPartytotalSum, setPoolPartytotalSum, \r\n        poolPartytotalGroupSum, setPoolPartytotalGroupSum,\r\n        selectedPoolPartyItems, setSelectedPoolPartyItems\r\n    } = context;\r\n    const [poolPartyDesc, setPoolPartyDesc] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        //Call to get the activties for this category\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activities?per_page=10&activity_group_size=705&_fields[]=id&_fields[]=title&_fields[]=acf.price&_fields[]=acf.hide_in_app&_fields[]=link')\r\n        .then(res => {\r\n            setPoolParties(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }); \r\n\r\n        //Getting Category Description from Website\r\n        axios.get('https://refreshingmountain.com/wp-json/wp/v2/activity_group_size/705')\r\n        .then(res => {\r\n            setPoolPartyDesc(res.data.description);\r\n        });\r\n        \r\n    }, [])\r\n\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(poolParties.length).fill(false)\r\n    );\r\n    \r\n    \r\n    //Updating Pricing, Single and Group\r\n    useEffect(()=> {\r\n        const _poolPartytotalSum =  Object.entries(checkedState).reduce(\r\n            (accumulator, [key, value]) =>\r\n              value \r\n                ? accumulator +\r\n                poolParties.find(\r\n                    (subscriber) => subscriber.id + \"\" === key\r\n                  )?.newPrice\r\n                : accumulator,\r\n            0\r\n        )\r\n        setPoolPartytotalSum(_poolPartytotalSum)\r\n        setPoolPartytotalGroupSum((_poolPartytotalSum * medianSize)) \r\n    }, [checkedState, medianSize, groupType])\r\n\r\n\r\n    if ( groupType !== 0 && medianSize !== 80 && groupEventType !== 'Team Building' ) {\r\n        return (\r\n            <>\r\n            <div className=\"single-activity-section\" id=\"pool\">\r\n                <ActivityHeader\r\n                    title=\"Pool Activities\" \r\n                    total={'$' +  poolPartytotalSum} \r\n                />\r\n                <p className=\"single-activity-description\">\r\n                    { poolPartyDesc }\r\n                </p>\r\n                <ul className=\"no-bullets\">\r\n                {poolParties.map(({ id, title, acf, link  }, index) => {\r\n                        let newPrice = 0;\r\n                        let newTitle = title.rendered;\r\n                    \r\n                        if (groupType === \"day\") {\r\n                            newPrice = (Math.round(acf.price) * constHours) / medianSize;\r\n                        }else if ( groupType === \"overnight\") {\r\n                            newPrice = ((Math.round(acf.price) * constHours) / medianSize) * 0.75;\r\n                        } else {\r\n                            newPrice = 0;\r\n                        }\r\n                        newPrice = Math.round(newPrice);\r\n\r\n                        let adminTitle = newTitle;\r\n                        poolParties[index].newPrice = newPrice;\r\n                        if ( acf.hide_in_app === false ) { \r\n                        \r\n                            return (\r\n                                <li key={id}>\r\n                                    <input\r\n                                        className='ck'\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={!!checkedState[index]}\r\n                                        onChange={() => {\r\n                                            setCheckedState({\r\n                                                ...checkedState,\r\n                                                [id]: !checkedState[id]\r\n                                            });\r\n\r\n                                            let _items = selectedPoolPartyItems?.PoolParty ?? [];\r\n                                            if (!checkedState[id]  ){\r\n                                                _items.push(adminTitle)\r\n                                                setSelectedPoolPartyItems({\r\n                                                    ...selectedPoolPartyItems,\r\n                                                    PoolParty: _items\r\n                                                })\r\n                                            }\r\n                                            else {\r\n                                                _items = _items.filter(item=>item != adminTitle);\r\n                                                setSelectedPoolPartyItems({\r\n                                                    ...selectedPoolPartyItems,\r\n                                                    PoolParty: _items\r\n                                                })\r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />\r\n                                    <label>\r\n                                        <a href={link}>{newTitle}</a> <span>${newPrice}/PER</span>\r\n                                        {/* <p>{desc}</p> */}\r\n                                    </label>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n        );\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nexport const poolPartytotalSum = () => {}\r\nexport default PoolPartiesApp; ","import React, { useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction LargeGroupsApp() {\r\n\r\n    const context = useContext(AppContext);\r\n    const {constHours, medianSize, groupType, groupSize} = context;\r\n    console.log(groupSize + groupType);\r\n    return (\r\n        <>\r\n            <div className=\"single-activity-section\" id=\"genRec\">\r\n                <div className=\"single-activity-header\">\r\n                    <div className=\"activity-name\">\r\n                        <h3 className=\"heading-style\">For Large Groups</h3>\r\n                    </div>\r\n                </div>\r\n                <p className=\"single-activity-description\">Due to the time and heavier coordination required to get large groups combination of activities, we'd love to talk to you about the vision for your day.\r\n                    We have successfully hosted groups of nearly 300 for a day retreat, and we're confident we can make it work for you!\r\n                    <a href=\"https://refreshingmountain.com/retreats/\" className=\"inquiry-btn\">Send Inqury</a>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LargeGroupsApp;","import React, { useContext } from 'react';\r\nimport './Activities.css';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction NothingSelectedAPp() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nothing-selected-alert\">\r\n                <h2>Please select Group Size and <br></br> Group Type to view activities</h2>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NothingSelectedAPp;","import React, { useState, useContext, useEffect } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBFooter } from \"mdbreact\";\r\nimport { Link } from 'react-scroll';\r\nimport './Footer.css';\r\n\r\n\r\nimport {AppContext} from '../AppContext'\r\n\r\nfunction getFormattedPrice(price) {\r\n    return `${price.toFixed(2)}`;\r\n}\r\n\r\nlet sideBarClass = 'estimate-sidebar';\r\n\r\n\r\nfunction FooterApp() {\r\n    const context = useContext(AppContext);\r\n    const { \r\n        groupSize, \r\n        medianSize, \r\n        groupType,\r\n        groupEventType,\r\n        highAdventuretotalSum, highAdventuretotalGroupSum,\r\n        generalRecreationtotalSum, generalRecreationtotalGroupSum, \r\n        wildLifetotalSum, wildLifetotalGroupSum, \r\n        teamBuildingtotalSum, teamBuildingtotalGroupSum, \r\n        horseProgramstotalSum, horseProgramstotalGroupSum,\r\n        poolPartytotalSum, poolPartytotalGroupSum, \r\n        totalGroupPrice, setTotalGroupPrice,\r\n        selectedHighAdventureItems,\r\n        selectedHorseProgramsItems,\r\n        selectedWildLifeItems,\r\n        selectedTeamBuildingItems, \r\n        selectedGeneralRecreationItems,\r\n        selectedPoolPartyItems,\r\n    } = context;\r\n    \r\n    const highAdvActArray = selectedHighAdventureItems['HighAdventure'];\r\n    let highAdvActString = highAdvActArray ? highAdvActArray.join(', ') : 'N/A';\r\n    if (highAdvActArray?.length === 0) { highAdvActArray.push('N/A'); }\r\n\r\n    const teamBuildingActArray = selectedTeamBuildingItems['TeamBuilding'];\r\n    let teamBuildingActString = teamBuildingActArray ? teamBuildingActArray.join(', ') : 'N/A';\r\n    if (teamBuildingActArray?.length === 0) { teamBuildingActArray.push('N/A'); }\r\n\r\n\r\n    const wildLifeActArray = selectedWildLifeItems['WildLife'];\r\n    let wildLifeActString = wildLifeActArray ? wildLifeActArray.join(', ') : 'N/A';\r\n    if (wildLifeActArray?.length === 0) { wildLifeActArray.push('N/A'); }\r\n\r\n    const horseActArray = selectedHorseProgramsItems['HorsePrograms'];\r\n    let horseActString = horseActArray ? horseActArray.join(', ') : 'N/A';\r\n    if (horseActArray?.length === 0) { horseActArray.push('N/A'); }\r\n\r\n    const genRecActArray = selectedGeneralRecreationItems['GeneralRecreation'];\r\n    let genRecActString = genRecActArray ? genRecActArray.join(', ') : 'N/A';\r\n    if (genRecActArray?.length === 0) { genRecActArray.push('N/A'); }\r\n\r\n    const poolPartyActArray = selectedPoolPartyItems['PoolParty'];\r\n    let poolPartyActString = poolPartyActArray ? poolPartyActArray.join(', ') : 'N/A';\r\n    if (poolPartyActArray?.length === 0) { poolPartyActArray.push('N/A'); }\r\n    \r\n     const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n\r\n    useEffect(()=> {\r\n        //Array with all prices\r\n        let allPrices = [\r\n            generalRecreationtotalSum,\r\n            wildLifetotalSum,\r\n            highAdventuretotalSum,\r\n            teamBuildingtotalSum,\r\n            horseProgramstotalSum,\r\n            poolPartytotalSum]; \r\n\r\n        console.log(\"HighAdventure:\", highAdvActString);\r\n        console.log(\"Team Building:\", selectedTeamBuildingItems['TeamBuilding']);\r\n        console.log(\"Wildlife:\", wildLifeActString);\r\n        console.log(\"Horse:\", horseActString);\r\n        console.log(\"Gen Rec:\", genRecActString);\r\n        console.log(\"Pool:\", poolPartyActString);\r\n\r\n\r\n        //Remove any undefined values from array\r\n        let filteredPrices = allPrices.filter(function(x) {\r\n            return x !== undefined;\r\n        });\r\n        const sum = filteredPrices.reduce((result,number)=> result+number);\r\n        setTotalPrice(sum);\r\n\r\n        setTotalGroupPrice(highAdventuretotalGroupSum + generalRecreationtotalGroupSum + wildLifetotalGroupSum + teamBuildingtotalGroupSum + horseProgramstotalGroupSum + poolPartytotalGroupSum);\r\n    }, [groupType, medianSize, highAdventuretotalGroupSum, generalRecreationtotalGroupSum, wildLifetotalGroupSum,teamBuildingtotalGroupSum,horseProgramstotalGroupSum,poolPartytotalGroupSum])\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div>\r\n            <MDBFooter className={sideBarClass}>\r\n                <h3>Your Group Price Estimate</h3>\r\n                <div>\r\n                    <ul>\r\n                        <li><Link activeClass={\"active\"} to=\"highAdv\" spy={true} offset={-20} smooth={true} duration={700}>High Adventure Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( highAdventuretotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"teamBuild\" spy={true} offset={-20} smooth={true} duration={700}>Teambuilding Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( teamBuildingtotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"wildlife\" spy={true} offset={-20} smooth={true} duration={700}>Wildlife Center Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( wildLifetotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }\r\n                            </span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"horsePro\" spy={true} offset={-20}smooth={true} duration={700}>Horse Program Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( horseProgramstotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><Link activeClass=\"active\" to=\"genRec\" spy={true} offset={-20} smooth={true} duration={700}>General Recreation Activities<span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( generalRecreationtotalGroupSum )} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link> </li>\r\n                        <li><Link activeClass=\"active\" to=\"pool\" spy={true} offset={-20} smooth={true} duration={700}>Pool Parties <span>\r\n                            {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( poolPartytotalGroupSum)} displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></Link></li>\r\n                        <li><strong>Total <span>\r\n                        {groupSize !== '80+ Persons'?<NumberFormat value={ Math.round( totalGroupPrice ) } displayType={'text'} thousandSeparator={true} prefix={'$'} /> : null }</span></strong></li>\r\n                    </ul>\r\n                    {groupSize !== '80+ Persons'?\r\n                    \r\n                    <div className=\"finalPrice\">\r\n            \r\n                        <div>\r\n                            <span>{totalPrice}</span> \r\n                            <span>Per Person Estimate</span> \r\n                        </div>\r\n                        <div>\r\n                            <a href=\r\n                                { \r\n                                    'https://refreshingmountain.com/day-activity-calculator-results/?' +\r\n                                    'size='             + groupSize  +\r\n                                    '&type='            + groupType +\r\n                                    '&event='           + groupEventType +\r\n\r\n                                    '&highAdv='         + highAdventuretotalGroupSum +\r\n                                    '&highAdvAct='      + highAdvActString + \r\n\r\n                                    '&teamBld='         + teamBuildingtotalGroupSum +\r\n                                    '&teamBldAct='      + teamBuildingActString + \r\n\r\n                                    '&wildLife='        + wildLifetotalGroupSum +\r\n                                    '&wildLifeAct='     + wildLifeActString + \r\n\r\n                                    '&horsePrg='        + horseProgramstotalGroupSum +\r\n                                    '&horsePrgAct='     + horseActString + \r\n\r\n                                    '&genRec='          + generalRecreationtotalGroupSum +\r\n                                    '&genRecAct='       + genRecActString + \r\n                                    \r\n                                    '&poolPrty='        + poolPartytotalGroupSum +\r\n                                    '&poolPrtyAct='     + poolPartyActString + \r\n                                    \r\n                                    '&total='           + totalPrice + \r\n                                    '&groupTotal='      + totalGroupPrice \r\n                                } \r\n                                \r\n                                className=\"click-price-btn\" target=\"_blank;\">Submit Inquiry</a>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    : null}\r\n                    \r\n            \r\n                    <p className=\"text-center\"><strong>Group Type Discounts: </strong>Day Groups may be eligible for discount with week day bookings, Monday through Friday.</p>\r\n                    <p className=\"text-center\">*Group events are price as a flat rate. This “pp” estimate is meant to help with planning, but final billing will be set as a flat price, with a min/max # of people that the schedule can accommodate</p>\r\n                    <p className=\"text-center\">** The rates shown in this tool for “Overnight Group” apply to any event booked at Refreshing Mountain with at least 30 people, 2 nights of lodging, and 4 meals booked as a retreat package.  They represent a 25% discount on activities, which can be applied to any activities schedule that is part of the event and created at least 60+ days before the start date of the event.  Contact Guest Services for additional information on these discounts and scheduling.</p>\r\n                </div>\r\n            </MDBFooter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterApp;","import React, { useState, useContext} from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport './App.css';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HeadingApp from './RetreatSelection/Heading';\r\nimport RetreatSizeApp from './RetreatSelection/RetreatSize';\r\nimport RetreatTypeApp from './RetreatSelection/RetreatType';\r\nimport RetreatEventTypeApp from './RetreatSelection/RetreatEventType';\r\nimport GeneralActivitiesApp from './Activities/GeneralRecreation';\r\nimport WildlifeCenterApp from './Activities/WildlifeCenter';\r\nimport HighAdventureApp from './Activities/HighAdventure';\r\nimport HorseProgramsApp from './Activities/HorsePrograms';\r\nimport TeambuildingApp from './Activities/Teambuilding';\r\nimport PoolPartiesApp from './Activities/PoolParties';\r\nimport LargeGroupsApp from './Activities/LargeGroups';\r\nimport NothingSelectedApp from './Activities/NothingSelected';\r\n\r\nimport FooterApp from './Footer/Footer';\r\nimport {AppContext} from './AppContext';\r\n\r\n\r\n\r\nfunction App() {\r\n    const context = useContext(AppContext)\r\n\r\n    const [groupSize,                       setGroupSize] = useState(0);\r\n    const [groupType,                       setGroupType] = useState(0);\r\n    const [groupEventType,                  setGroupEventType] = useState(0);\r\n\r\n    const [constHours,                      setConstHours] = useState(\"\");\r\n    const [constSize,                       setConstSize] = useState(\"\");\r\n    const [medianSize,                      setMedianSize] = useState(\"\");\r\n\r\n    const [highAdventuretotalSum,           setHighAdventuretotalSum] = useState(\"\");\r\n    const [generalRecreationtotalSum,       setGeneralRecreationtotalSum] = useState(\"\");\r\n    const [wildLifetotalSum,                setWildLifetotalSum] = useState(\"\");\r\n    const [teamBuildingtotalSum,            setTeamBuildingtotalSum] = useState(\"\");\r\n    const [horseProgramstotalSum,           setHorseProgramstotalSum] = useState(\"\");\r\n    const [poolPartytotalSum,               setPoolPartytotalSum] = useState(\"\");\r\n\r\n    \r\n    const [highAdventuretotalGroupSum,      setHighAdventuretotalGroupSum] = useState(0);\r\n    const [generalRecreationtotalGroupSum,  setGeneralRecreationtotalGroupSum] = useState(0);\r\n    const [wildLifetotalGroupSum,           setWildLifetotalGroupSum] = useState(0);\r\n    const [teamBuildingtotalGroupSum,       setTeamBuildingtotalGroupSum] = useState(0);\r\n    const [horseProgramstotalGroupSum,      setHorseProgramstotalGroupSum] = useState(0);\r\n    const [poolPartytotalGroupSum,          setPoolPartytotalGroupSum] = useState(0);\r\n\r\n    const [totalGroupPrice,                 setTotalGroupPrice] = useState(0);\r\n\r\n\r\n    const [highAdventure,                   setHighAdventure] = useState([]);\r\n    const [wildLife,                        setWildLife] = useState([]);\r\n    const [generalRecreation,               setGeneralRecreation] = useState([]);\r\n    const [poolParties,                     setPoolParties] = useState([]);\r\n    const [horsePrograms,                   setHorsePrograms] = useState([]);\r\n    const [teamBuilding,                    setTeamBuilding] = useState([]);\r\n    \r\n    const [selectedHighAdventureItems,      setSelectedHighAdventureItems] = useState(0);\r\n    const [selectedGeneralRecreationItems,  setSelectedGeneralRecreationItems] = useState(0);\r\n    const [selectedWildLifeItems,           setSelectedWildLifeItems] = useState(0);\r\n    const [selectedTeamBuildingItems,       setSelectedTeamBuildingItems] = useState(0);\r\n    const [selectedHorseProgramsItems,      setSelectedHorseProgramsItems] = useState(0);\r\n    const [selectedPoolPartyItems,          setSelectedPoolPartyItems] = useState(0);\r\n\r\n\r\n    const initialValue = {\r\n        groupSize,                      setGroupSize,\r\n        groupType,                      setGroupType,\r\n        groupEventType,                 setGroupEventType,\r\n        constHours,                     setConstHours,\r\n        constSize,                      setConstSize,\r\n        medianSize,                     setMedianSize,\r\n\r\n        highAdventure,                  setHighAdventure,\r\n        wildLife,                       setWildLife,\r\n        generalRecreation,              setGeneralRecreation,\r\n        poolParties,                    setPoolParties,\r\n        horsePrograms,                  setHorsePrograms,\r\n        teamBuilding,                   setTeamBuilding,\r\n\r\n        highAdventuretotalSum,          setHighAdventuretotalSum,\r\n        generalRecreationtotalSum,      setGeneralRecreationtotalSum,\r\n        wildLifetotalSum,               setWildLifetotalSum,\r\n        teamBuildingtotalSum,           setTeamBuildingtotalSum,\r\n        horseProgramstotalSum,          setHorseProgramstotalSum,\r\n        poolPartytotalSum,              setPoolPartytotalSum,\r\n        \r\n        highAdventuretotalGroupSum,     setHighAdventuretotalGroupSum,\r\n        generalRecreationtotalGroupSum, setGeneralRecreationtotalGroupSum,\r\n        wildLifetotalGroupSum,          setWildLifetotalGroupSum,\r\n        teamBuildingtotalGroupSum,      setTeamBuildingtotalGroupSum,\r\n        horseProgramstotalGroupSum,     setHorseProgramstotalGroupSum,\r\n        poolPartytotalGroupSum,         setPoolPartytotalGroupSum,\r\n\r\n        totalGroupPrice,                setTotalGroupPrice,\r\n\r\n        selectedHighAdventureItems,     setSelectedHighAdventureItems,\r\n        selectedGeneralRecreationItems, setSelectedGeneralRecreationItems,\r\n        selectedWildLifeItems,          setSelectedWildLifeItems,\r\n        selectedTeamBuildingItems,      setSelectedTeamBuildingItems,\r\n        selectedHorseProgramsItems,     setSelectedHorseProgramsItems,\r\n        selectedPoolPartyItems,         setSelectedPoolPartyItems\r\n        \r\n    }\r\n    return (\r\n        \r\n        <AppContext.Provider value={initialValue}>\r\n            <div className=\"App\">\r\n                <Container>\r\n                    <Row className=\"filter-bar\">\r\n                        <Col className=\"heading-intro\" sm=\"12\" lg=\"3\">\r\n                            <HeadingApp />\r\n                        </Col>\r\n                        <Col className=\"event-type\" sm=\"12\" lg=\"3\">\r\n                            <RetreatEventTypeApp />\r\n                        </Col>\r\n                        <Col className=\"retreat-size\" sm=\"12\" lg=\"3\">\r\n                            <RetreatSizeApp />\r\n                        </Col>\r\n                        <Col className=\"retreat-type\" sm=\"12\" lg=\"3\">\r\n                            <RetreatTypeApp />\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"activity-detail\">\r\n                        <p>Activities can generally accommodate 20 people per hour. Example, with a group size of 20-39 you would need 2 activities to keep everyone occupied over 2 hrs. The pricing automatically recognizes number of hours needed based on your group size.</p>\r\n                    </div>\r\n                    <Row>\r\n                        <Col sm=\"12\" lg=\"8\">\r\n                            {groupSize === 0 || groupType === 0 || groupEventType === 0 ? <NothingSelectedApp /> : null }\r\n                            <HighAdventureApp />\r\n                            <TeambuildingApp />\r\n                            <WildlifeCenterApp />\r\n                            <HorseProgramsApp />\r\n                            <GeneralActivitiesApp />     \r\n                            <PoolPartiesApp />\r\n                            {groupSize === '80+ Persons' && groupType !== 0 ? <LargeGroupsApp /> : null }\r\n                        </Col>\r\n                        <Col className=\"sidebar\" sm=\"12\" lg=\"4\">\r\n                            <FooterApp />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n          <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}